{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"to",
				"to_string() (as ToString)"
			],
			[
				"print",
				"println!(…)"
			],
			[
				"get",
				"get_unchecked(…)"
			],
			[
				"println",
				"println!(…)"
			],
			[
				"md",
				"ripemd160"
			],
			[
				"dec",
				"decryptedNames"
			],
			[
				"ch",
				"charCodeAt"
			],
			[
				"val",
				"validationResult"
			],
			[
				"asser",
				"assertEquals"
			],
			[
				"count",
				"countAndSort"
			],
			[
				"valida",
				"validationResult"
			],
			[
				"repla",
				"replaceAll"
			],
			[
				"i",
				"isNaN"
			],
			[
				"chec",
				"checksums"
			],
			[
				"parse",
				"parseSideLengths2"
			],
			[
				"par",
				"parseSideLengths"
			],
			[
				"assert",
				"assertEquals"
			],
			[
				"http",
				"https://deno.land/std@0.154.0/testing/asserts.ts"
			],
			[
				"neighborMap",
				"neighborMap2"
			],
			[
				"ne",
				"neighborMap"
			],
			[
				"neigh",
				"neighborMap"
			],
			[
				"nei",
				"neighborMap2"
			],
			[
				"read",
				"readTextFile"
			],
			[
				"tra",
				"tracePosition"
			],
			[
				"di",
				"distance"
			],
			[
				"trace",
				"tracePosition"
			],
			[
				"orien",
				"orientationMap"
			],
			[
				"ori",
				"orientationString"
			],
			[
				"defa",
				"defaultPosition"
			],
			[
				"in",
				"input"
			],
			[
				"ins",
				"instruction"
			],
			[
				"instr",
				"instructions"
			],
			[
				"ma",
				"matchAll"
			],
			[
				"readF",
				"readTextFile"
			],
			[
				"wgpu",
				"wgpu_compute"
			],
			[
				"WIndo",
				"WindowEvent"
			],
			[
				"window",
				"window_id"
			],
			[
				"Event",
				"EventLoop"
			],
			[
				"env",
				"env_logger"
			],
			[
				"Windo",
				"WindowBuilder"
			],
			[
				"even",
				"event_loop"
			],
			[
				"command",
				"commandEncoder"
			],
			[
				"cre",
				"createBindGroup"
			],
			[
				"COPY",
				"COPY_SRC"
			],
			[
				"GPUBuffer",
				"GPUBufferUsage"
			],
			[
				"GPUSha",
				"GPUShaderStage"
			],
			[
				"createBindGro",
				"createBindGroupLayout"
			],
			[
				"comp",
				"computePipeline"
			],
			[
				"bindGrou",
				"bindGroupLayout"
			],
			[
				"GPUB",
				"GPUBufferUsage"
			],
			[
				"computeP",
				"computePipeline"
			],
			[
				"bind",
				"bindGroupLayout"
			],
			[
				"gpuWrite",
				"gpuWriteBuffer2"
			],
			[
				"gpu",
				"gpuWriteBuffer1"
			],
			[
				"GPUShader",
				"GPUShaderStage"
			],
			[
				"GPUSHade",
				"GPUShaderStage"
			],
			[
				"createBindG",
				"createBindGroupLayout"
			],
			[
				"copy",
				"copyArrayBuffer"
			],
			[
				"GPUBuff",
				"GPUBufferUsage"
			],
			[
				"GPUBU",
				"GPUBufferUsage"
			],
			[
				"GPUBUf",
				"GPUBufferUsage"
			],
			[
				"Uint",
				"Uint8Array"
			],
			[
				"Array",
				"ArrayBuffer"
			],
			[
				"MAP",
				"MAP_WRITE"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/trox667/sw/aoc/2016/rs/Cargo.toml",
			"settings":
			{
				"buffer_size": 229,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALkAAAAAAAAAugAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5AAAAAAAAALkAAAAAAAAAAAAAAAAAAAA"
				],
				[
					3,
					2,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AgAAALoAAAAAAAAAvAAAAAAAAAAAAAAAuwAAAAAAAAC9AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6AAAAAAAAALoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "bin"
					},
					"AwAAALwAAAAAAAAAvQAAAAAAAAAAAAAAvQAAAAAAAAC+AAAAAAAAAAAAAAC+AAAAAAAAAL8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8AAAAAAAAALwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMEAAAAAAAAAwgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBAAAAAAAAAMEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "name"
					},
					"BAAAAMIAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMUAAAAAAAAAAAAAAMUAAAAAAAAAxgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCAAAAAAAAAMIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMYAAAAAAAAAxwAAAAAAAAAAAAAAxwAAAAAAAADIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGAAAAAAAAAMYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMgAAAAAAAAAyQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIAAAAAAAAAMgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAMkAAAAAAAAAywAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "day5"
					},
					"BAAAAMoAAAAAAAAAywAAAAAAAAAAAAAAywAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAAM0AAAAAAAAAAAAAAM0AAAAAAAAAzgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKAAAAAAAAAMoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "\nsr"
					},
					"AwAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADRAAAAAAAAAAAAAADRAAAAAAAAANIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPAAAAAAAAAM8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert_completion",
					{
						"completion": "source",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "source"
					},
					"AgAAANAAAAAAAAAA0AAAAAAAAAACAAAAc3LQAAAAAAAAANYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSAAAAAAAAANIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANYAAAAAAAAA1wAAAAAAAAAAAAAA1wAAAAAAAADYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWAAAAAAAAANYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANgAAAAAAAAA2QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYAAAAAAAAANgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAANkAAAAAAAAA2wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZAAAAAAAAANkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "day5"
					},
					"BAAAANoAAAAAAAAA2wAAAAAAAAAAAAAA2wAAAAAAAADcAAAAAAAAAAAAAADcAAAAAAAAAN0AAAAAAAAAAAAAAN0AAAAAAAAA3gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaAAAAAAAAANoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"AQAAAN0AAAAAAAAA3QAAAAAAAAABAAAANQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeAAAAAAAAAN4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "05"
					},
					"AgAAAN0AAAAAAAAA3gAAAAAAAAAAAAAA3gAAAAAAAADfAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdAAAAAAAAAN0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": ".rs"
					},
					"AwAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADhAAAAAAAAAAAAAADhAAAAAAAAAOIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfAAAAAAAAAN8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "path"
					},
					"BQAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADRAAAAAAAAAAYAAABzb3VyY2XRAAAAAAAAANIAAAAAAAAAAAAAANIAAAAAAAAA0wAAAAAAAAAAAAAA0wAAAAAAAADUAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQAAAAAAAAANYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "src/"
					},
					"BAAAANgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADaAAAAAAAAAAAAAADaAAAAAAAAANsAAAAAAAAAAAAAANsAAAAAAAAA3AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYAAAAAAAAANgAAAAAAAAAAAAAAAAAUkA"
				]
			]
		},
		{
			"file": "/home/trox667/sw/aoc/2016/rs/src/day05.rs",
			"settings":
			{
				"buffer_size": 629,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAABAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANAAAAAAAAAA0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " inpit"
					},
					"BgAAABAAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABMAAAAAAAAAAAAAABMAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABgAAAAAAAAAGQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					5,
					"left_delete",
					null,
					"BQAAABgAAAAAAAAAGAAAAAAAAAABAAAAIBcAAAAAAAAAFwAAAAAAAAABAAAAPRYAAAAAAAAAFgAAAAAAAAABAAAAIBUAAAAAAAAAFQAAAAAAAAABAAAAdBQAAAAAAAAAFAAAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZAAAAAAAAABkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "ut"
					},
					"AgAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABgAAAAAAAAAGQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAABkAAAAAAAAAGwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZAAAAAAAAABkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "abc"
					},
					"AwAAABoAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAAB0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAB4AAAAAAAAAHwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeAAAAAAAAAB4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									1,
									0
								],
								[
									1,
									1
								],
								"    ",
								null
							],
							[
								[
									2,
									1
								],
								[
									2,
									1
								],
								"\n",
								null
							]
						]
					},
					"AgAAACEAAAAAAAAAIgAAAAAAAAAAAAAADAAAAAAAAAAQAAAAAAAAAAEAAAAJ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfAAAAAAAAAB8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACIAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAnAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiAAAAAAAAACIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAACcAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAACoAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " mut"
					},
					"BAAAACoAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAAC0AAAAAAAAAAAAAAC0AAAAAAAAALgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqAAAAAAAAACoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " hasher"
					},
					"BwAAAC4AAAAAAAAALwAAAAAAAAAAAAAALwAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAANQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuAAAAAAAAAC4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAADUAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA3AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1AAAAAAAAADUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " Md5::new"
					},
					"CQAAADcAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA5AAAAAAAAAAAAAAA5AAAAAAAAADoAAAAAAAAAAAAAADoAAAAAAAAAOwAAAAAAAAAAAAAAOwAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAD0AAAAAAAAAAAAAAD0AAAAAAAAAPgAAAAAAAAAAAAAAPgAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAAEAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3AAAAAAAAADcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEAAAAAAAAAAQgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEIAAAAAAAAAQwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCAAAAAAAAAEIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line Before.sublime-macro"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALAAAAAAAAAAsAAAAAAAAAAAAAAAAAckA"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "use"
					},
					"AwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " md5::"
					},
					"BgAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAkAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAkAAAAAAAAACwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAAAAAAAAAAkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "Md5,"
					},
					"BAAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKAAAAAAAAAAoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " Digest"
					},
					"BwAAAA4AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOAAAAAAAAAA4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABYAAAAAAAAAFwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "\nuse"
					},
					"BAAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABoAAAAAAAAAAAAAABoAAAAAAAAAGwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXAAAAAAAAABcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABsAAAAAAAAAHAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbAAAAAAAAABsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					4,
					"left_delete",
					null,
					"BAAAABsAAAAAAAAAGwAAAAAAAAABAAAAIBoAAAAAAAAAGgAAAAAAAAABAAAAZRkAAAAAAAAAGQAAAAAAAAABAAAAcxgAAAAAAAAAGAAAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "\nhashe"
					},
					"BwAAAFwAAAAAAAAAXQAAAAAAAAAAAAAAXQAAAAAAAABhAAAAAAAAAAAAAABhAAAAAAAAAGIAAAAAAAAAAAAAAGIAAAAAAAAAYwAAAAAAAAAAAAAAYwAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGUAAAAAAAAAAAAAAGUAAAAAAAAAZgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcAAAAAAAAAFwAAAAAAAAA////////738"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "r.update"
					},
					"CAAAAGYAAAAAAAAAZwAAAAAAAAAAAAAAZwAAAAAAAABoAAAAAAAAAAAAAABoAAAAAAAAAGkAAAAAAAAAAAAAAGkAAAAAAAAAagAAAAAAAAAAAAAAagAAAAAAAABrAAAAAAAAAAAAAABrAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAbQAAAAAAAAAAAAAAbQAAAAAAAABuAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmAAAAAAAAAGYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAG4AAAAAAAAAcAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuAAAAAAAAAG4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAG8AAAAAAAAAcQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvAAAAAAAAAG8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAG8AAAAAAAAAbwAAAAAAAAABAAAAIm8AAAAAAAAAbwAAAAAAAAABAAAAIg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "input"
					},
					"BQAAAG8AAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAHIAAAAAAAAAAAAAAHIAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAAB0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvAAAAAAAAAG8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHUAAAAAAAAAdgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1AAAAAAAAAHUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									0,
									10
								],
								[
									0,
									15
								],
								"",
								null
							],
							[
								[
									0,
									21
								],
								[
									0,
									21
								],
								", Md5",
								null
							]
						]
					},
					"AgAAABUAAAAAAAAAGgAAAAAAAAAAAAAACgAAAAAAAAAKAAAAAAAAAAUAAABNZDUsIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2AAAAAAAAAHYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"left_delete",
					null,
					"AQAAABIAAAAAAAAAEgAAAAAAAAADAAAATWQ1",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASAAAAAAAAABUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "Md5"
					},
					"AwAAABIAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABUAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					152,
					1,
					"left_delete",
					null,
					"AQAAAAkAAAAAAAAACQAAAAAAAAANAAAAe0RpZ2VzdCwgTWQ1fQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAAAAAAAAABYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": "pre"
					},
					"AwAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAAAAAAAAAAkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					154,
					11,
					"left_delete",
					null,
					"CwAAAAsAAAAAAAAACwAAAAAAAAABAAAAZQoAAAAAAAAACgAAAAAAAAABAAAAcgkAAAAAAAAACQAAAAAAAAABAAAAcAgAAAAAAAAACAAAAAAAAAABAAAAOgcAAAAAAAAABwAAAAAAAAABAAAAOgYAAAAAAAAABgAAAAAAAAABAAAANQUAAAAAAAAABQAAAAAAAAABAAAAZAQAAAAAAAAABAAAAAAAAAABAAAAbQMAAAAAAAAAAwAAAAAAAAABAAAAIAIAAAAAAAAAAgAAAAAAAAABAAAAZQEAAAAAAAAAAQAAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					155,
					1,
					"right_delete",
					null,
					"AQAAAAEAAAAAAAAAAQAAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					156,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					157,
					2,
					"right_delete",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAABAAAACgAAAAAAAAAAAAAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					160,
					2,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Line.sublime-macro"
					},
					"AgAAACMAAAAAAAAAIwAAAAAAAAAhAAAAICAgIGxldCBtdXQgaGFzaGVyID0gTWQ1OjpuZXcoKTsKIwAAAAAAAAAjAAAAAAAAABoAAAAgICAgaGFzaGVyLnVwZGF0ZShpbnB1dCk7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": "\nmd5:"
					},
					"BgAAACIAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiAAAAAAAAACIAAAAAAAAA////////738"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": ":comp"
					},
					"BQAAACsAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAC4AAAAAAAAAAAAAAC4AAAAAAAAALwAAAAAAAAAAAAAALwAAAAAAAAAwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArAAAAAAAAACsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					165,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"documentation\":{\"kind\":\"markdown\",\"value\":\"Compute the digest of data.\"},\"insertTextFormat\":2,\"detail\":\"fn(T) -> Digest\",\"kind\":3,\"sortText\":\"ffffffef\",\"labelDetails\":{\"description\":\"fn(T) -> Digest\"},\"filterText\":\"compute\",\"additionalTextEdits\":[],\"deprecated\":false,\"label\":\"compute(…)\",\"preselect\":true,\"textEdit\":{\"range\":{\"start\":{\"line\":2,\"character\":9},\"end\":{\"line\":2,\"character\":13}},\"newText\":\"compute(${1:data})$0\"},\"command\":{\"title\":\"triggerParameterHints\",\"command\":\"editor.action.triggerParameterHints\"}}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							79,
							164,
							5
						],
						"trigger": "compute(…)"
					},
					"AgAAACwAAAAAAAAALAAAAAAAAAAEAAAAY29tcCwAAAAAAAAAOQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "input"
					},
					"BgAAADQAAAAAAAAANQAAAAAAAAAAAAAANQAAAAAAAAA1AAAAAAAAAAQAAABkYXRhNQAAAAAAAAA2AAAAAAAAAAAAAAA2AAAAAAAAADcAAAAAAAAAAAAAADcAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA5AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0AAAAAAAAADgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADoAAAAAAAAAOwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6AAAAAAAAADoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAACcAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAACoAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": " digest"
					},
					"BwAAACoAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAAC0AAAAAAAAAAAAAAC0AAAAAAAAALgAAAAAAAAAAAAAALgAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqAAAAAAAAACoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAADEAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAzAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxAAAAAAAAADEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADMAAAAAAAAANAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAAAAAAAAADMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					177,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AgAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABNAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0AAAAAAAAADQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": "fo"
					},
					"AgAAAE0AAAAAAAAATgAAAAAAAAAAAAAATgAAAAAAAABPAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNAAAAAAAAAE0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					179,
					2,
					"left_delete",
					null,
					"AgAAAE4AAAAAAAAATgAAAAAAAAABAAAAb00AAAAAAAAATQAAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPAAAAAAAAAE8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "println"
					},
					"BwAAAE0AAAAAAAAATgAAAAAAAAAAAAAATgAAAAAAAABPAAAAAAAAAAAAAABPAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAUQAAAAAAAAAAAAAAUQAAAAAAAABSAAAAAAAAAAAAAABSAAAAAAAAAFMAAAAAAAAAAAAAAFMAAAAAAAAAVAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNAAAAAAAAAE0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					182,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"documentation\":{\"kind\":\"markdown\",\"value\":\"Prints to the standard output, with a newline.\\n\\nOn all platforms, the newline is the LINE FEED character (`\\\\n`/`U+000A`) alone\\n(no additional CARRIAGE RETURN (`\\\\r`/`U+000D`)).\\n\\nThis macro uses the same syntax as [`format!`], but writes to the standard output instead.\\nSee [`std::fmt`] for more information.\\n\\nUse `println!` only for the primary output of your program. Use\\n[`eprintln!`] instead to print error and progress messages.\\n\\n[`std::fmt`]: crate::fmt\\n[`eprintln!`]: crate::eprintln\\n\\n# Panics\\n\\nPanics if writing to [`io::stdout`] fails.\\n\\n[`io::stdout`]: crate::io::stdout\\n\\n# Examples\\n\\n```rust\\nprintln!(); // prints just a newline\\nprintln!(\\\"hello there!\\\");\\nprintln!(\\\"format {} arguments\\\", \\\"some\\\");\\n```\"},\"textEdit\":{\"range\":{\"start\":{\"line\":3,\"character\":4},\"end\":{\"line\":3,\"character\":11}},\"newText\":\"println!($0)\"},\"deprecated\":false,\"label\":\"println!(…)\",\"detail\":\"macro_rules! println\",\"additionalTextEdits\":[],\"kind\":3,\"sortText\":\"ffffffef\",\"labelDetails\":{\"description\":\"macro_rules! println\"},\"filterText\":\"println!\",\"insertTextFormat\":2}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							94,
							180,
							7
						],
						"trigger": "println!(…)"
					},
					"AgAAAE0AAAAAAAAATQAAAAAAAAAHAAAAcHJpbnRsbk0AAAAAAAAAVwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUAAAAAAAAAFQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					183,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAFYAAAAAAAAAWAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWAAAAAAAAAFYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "{:x}"
					},
					"BAAAAFcAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABZAAAAAAAAAAAAAABZAAAAAAAAAFoAAAAAAAAAAAAAAFoAAAAAAAAAWwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXAAAAAAAAAFcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFwAAAAAAAAAXQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcAAAAAAAAAFwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": " digest"
					},
					"BwAAAF0AAAAAAAAAXgAAAAAAAAAAAAAAXgAAAAAAAABfAAAAAAAAAAAAAABfAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAYQAAAAAAAAAAAAAAYQAAAAAAAABiAAAAAAAAAAAAAABiAAAAAAAAAGMAAAAAAAAAAAAAAGMAAAAAAAAAZAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdAAAAAAAAAF0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGUAAAAAAAAAZgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlAAAAAAAAAGUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					200,
					1,
					"insert",
					{
						"characters": "fpra"
					},
					"BAAAAEEAAAAAAAAAQgAAAAAAAAAAAAAAQgAAAAAAAABDAAAAAAAAAAAAAABDAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAARQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAAAAAAAAAEEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					201,
					3,
					"left_delete",
					null,
					"AwAAAEQAAAAAAAAARAAAAAAAAAABAAAAYUMAAAAAAAAAQwAAAAAAAAABAAAAckIAAAAAAAAAQgAAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFAAAAAAAAAEUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "ormat!("
					},
					"BwAAAEIAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEUAAAAAAAAAAAAAAEUAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAABHAAAAAAAAAAAAAABHAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAASQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCAAAAAAAAAEIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": "\"{}"
					},
					"AwAAAEkAAAAAAAAASgAAAAAAAAAAAAAASgAAAAAAAABLAAAAAAAAAAAAAABLAAAAAAAAAEwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJAAAAAAAAAEkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": "\","
					},
					"AgAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMAAAAAAAAAEwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE4AAAAAAAAATwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOAAAAAAAAAE4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFQAAAAAAAAAVQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUAAAAAAAAAFQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFUAAAAAAAAAVgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVAAAAAAAAAFUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					215,
					1,
					"paste",
					null,
					"AQAAAFYAAAAAAAAAXQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWAAAAAAAAAFYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": "{}"
					},
					"AgAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMAAAAAAAAAEwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAGAAAAAAAAAAYQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					242,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAACIAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAAqAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiAAAAAAAAACIAAAAAAAAAAAAAAADAaEA"
				],
				[
					243,
					1,
					"insert",
					{
						"characters": " index"
					},
					"BgAAACoAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAAC0AAAAAAAAAAAAAAC0AAAAAAAAALgAAAAAAAAAAAAAALgAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAADAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqAAAAAAAAACoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					244,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAADAAAAAAAAAAMQAAAAAAAAAAAAAAMQAAAAAAAAAyAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": " =;"
					},
					"AwAAADIAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADUAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyAAAAAAAAADIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					246,
					2,
					"left_delete",
					null,
					"AgAAADQAAAAAAAAANAAAAAAAAAABAAAAOzMAAAAAAAAAMwAAAAAAAAABAAAAPQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1AAAAAAAAADUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					247,
					1,
					"insert",
					{
						"characters": "0;"
					},
					"AgAAADMAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA1AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAAAAAAAAADMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					249,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAACsAAAAAAAAALAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArAAAAAAAAACsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					250,
					1,
					"left_delete",
					null,
					"AQAAACsAAAAAAAAAKwAAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsAAAAAAAAACwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					251,
					1,
					"insert",
					{
						"characters": "mut"
					},
					"AwAAACsAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAC4AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArAAAAAAAAACsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC4AAAAAAAAALwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuAAAAAAAAAC4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					260,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CAAAADkAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAQwAAAAAAAAAAAAAAOgAAAAAAAAA6AAAAAAAAAAQAAAAgICAgPwAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAEQAAAAAAAAAAAAAADsAAAAAAAAAOwAAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5AAAAAAAAADkAAAAAAAAA////////738"
				],
				[
					262,
					1,
					"reindent",
					null,
					"AQAAADsAAAAAAAAAPwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7AAAAAAAAADsAAAAAAAAAAAAAAAAAQkA"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": "loop"
					},
					"BQAAAD8AAAAAAAAAQAAAAAAAAAAAAAAAQQAAAAAAAABBAAAAAAAAAAQAAAAgICAgQAAAAAAAAABBAAAAAAAAAAAAAABBAAAAAAAAAEIAAAAAAAAAAAAAAEIAAAAAAAAAQwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/AAAAAAAAAD8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEMAAAAAAAAARAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDAAAAAAAAAEMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					265,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEQAAAAAAAAARgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAAAAAAAAAEQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					266,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAEUAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAEsAAAAAAAAATwAAAAAAAAAAAAAARgAAAAAAAABGAAAAAAAAAAQAAAAgICAgRgAAAAAAAABLAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFAAAAAAAAAEUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					268,
					3,
					"swap_line_up",
					null,
					"BgAAAFMAAAAAAAAAUwAAAAAAAABAAAAAICAgIGxldCBkaWdlc3QgPSBtZDU6OmNvbXB1dGUoZm9ybWF0ISgie317fSIsIGlucHV0LCAzMjMxOTI5KSk7ClIAAAAAAAAAkgAAAAAAAAAAAAAAUgAAAAAAAABSAAAAAAAAAEAAAAAgICAgbGV0IGRpZ2VzdCA9IG1kNTo6Y29tcHV0ZShmb3JtYXQhKCJ7fXt9IiwgaW5wdXQsIDMyMzE5MjkpKTsKTAAAAAAAAACMAAAAAAAAAAAAAABMAAAAAAAAAEwAAAAAAAAAQAAAACAgICBsZXQgZGlnZXN0ID0gbWQ1Ojpjb21wdXRlKGZvcm1hdCEoInt9e30iLCBpbnB1dCwgMzIzMTkyOSkpOwpGAAAAAAAAAIYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbAAAAAAAAAFsAAAAAAAAAAAAAAAAAUkA"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AgAAAEoAAAAAAAAASwAAAAAAAAAAAAAAhwAAAAAAAACHAAAAAAAAAAUAAAAgICAgCQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKAAAAAAAAAEoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					277,
					1,
					"insert",
					{
						"characters": "index"
					},
					"BgAAAHwAAAAAAAAAfQAAAAAAAAAAAAAAfQAAAAAAAAB9AAAAAAAAAAcAAAAzMjMxOTI5fQAAAAAAAAB+AAAAAAAAAAAAAAB+AAAAAAAAAH8AAAAAAAAAAAAAAH8AAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACBAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8AAAAAAAAAIMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					279,
					1,
					"insert",
					{
						"characters": "\n\nindex"
					},
					"CgAAAIQAAAAAAAAAhQAAAAAAAAAAAAAAhQAAAAAAAACKAAAAAAAAAAAAAACKAAAAAAAAAIsAAAAAAAAAAAAAAIsAAAAAAAAAkAAAAAAAAAAAAAAAhQAAAAAAAACFAAAAAAAAAAUAAAAgICAgCYsAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACNAAAAAAAAAAAAAACNAAAAAAAAAI4AAAAAAAAAAAAAAI4AAAAAAAAAjwAAAAAAAAAAAAAAjwAAAAAAAACQAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEAAAAAAAAAIQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					280,
					1,
					"insert",
					{
						"characters": " +="
					},
					"AwAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACSAAAAAAAAAAAAAACSAAAAAAAAAJMAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQAAAAAAAAAJAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					281,
					1,
					"insert",
					{
						"characters": " 1;"
					},
					"AwAAAJMAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACVAAAAAAAAAAAAAACVAAAAAAAAAJYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTAAAAAAAAAJMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					284,
					1,
					"reindent",
					null,
					"AQAAAIUAAAAAAAAAigAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFAAAAAAAAAIUAAAAAAAAAAAAAAABgZUA"
				],
				[
					285,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKAAAAAAAAAIoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIwAAAAAAAAAjQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMAAAAAAAAAIwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					287,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAI0AAAAAAAAAjwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNAAAAAAAAAI0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					288,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAI0AAAAAAAAAjQAAAAAAAAABAAAAKI0AAAAAAAAAjQAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOAAAAAAAAAI4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": "digest.sta"
					},
					"CgAAAI0AAAAAAAAAjgAAAAAAAAAAAAAAjgAAAAAAAACPAAAAAAAAAAAAAACPAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACSAAAAAAAAAAAAAACSAAAAAAAAAJMAAAAAAAAAAAAAAJMAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACVAAAAAAAAAAAAAACVAAAAAAAAAJYAAAAAAAAAAAAAAJYAAAAAAAAAlwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNAAAAAAAAAI0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					290,
					3,
					"left_delete",
					null,
					"AwAAAJYAAAAAAAAAlgAAAAAAAAABAAAAYZUAAAAAAAAAlQAAAAAAAAABAAAAdJQAAAAAAAAAlAAAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXAAAAAAAAAJcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					291,
					1,
					"insert",
					{
						"characters": "toS"
					},
					"AwAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACWAAAAAAAAAAAAAACWAAAAAAAAAJcAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUAAAAAAAAAJQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					292,
					3,
					"left_delete",
					null,
					"AwAAAJYAAAAAAAAAlgAAAAAAAAABAAAAU5UAAAAAAAAAlQAAAAAAAAABAAAAb5QAAAAAAAAAlAAAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXAAAAAAAAAJcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					293,
					1,
					"insert",
					{
						"characters": "into"
					},
					"BAAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACWAAAAAAAAAAAAAACWAAAAAAAAAJcAAAAAAAAAAAAAAJcAAAAAAAAAmAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUAAAAAAAAAJQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					294,
					5,
					"left_delete",
					null,
					"BQAAAJcAAAAAAAAAlwAAAAAAAAABAAAAb5YAAAAAAAAAlgAAAAAAAAABAAAAdJUAAAAAAAAAlQAAAAAAAAABAAAAbpQAAAAAAAAAlAAAAAAAAAABAAAAaZMAAAAAAAAAkwAAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYAAAAAAAAAJgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAJMAAAAAAAAAlAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTAAAAAAAAAJMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					458,
					1,
					"insert",
					{
						"characters": "into"
					},
					"BAAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACWAAAAAAAAAAAAAACWAAAAAAAAAJcAAAAAAAAAAAAAAJcAAAAAAAAAmAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUAAAAAAAAAJQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					459,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJgAAAAAAAAAmgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYAAAAAAAAAJgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					462,
					1,
					"insert",
					{
						"characters": "String::new("
					},
					"DAAAAI0AAAAAAAAAjgAAAAAAAAAAAAAAjgAAAAAAAACPAAAAAAAAAAAAAACPAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACSAAAAAAAAAAAAAACSAAAAAAAAAJMAAAAAAAAAAAAAAJMAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACVAAAAAAAAAAAAAACVAAAAAAAAAJYAAAAAAAAAAAAAAJYAAAAAAAAAlwAAAAAAAAAAAAAAlwAAAAAAAACYAAAAAAAAAAAAAACYAAAAAAAAAJkAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNAAAAAAAAAI0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					464,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAKYAAAAAAAAApwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmAAAAAAAAAKYAAAAAAAAA////////738"
				],
				[
					465,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKcAAAAAAAAAqAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnAAAAAAAAAKcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					466,
					1,
					"left_delete",
					null,
					"AQAAAKcAAAAAAAAApwAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoAAAAAAAAAKgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					467,
					1,
					"insert",
					{
						"characters": ".star"
					},
					"BQAAAKcAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACpAAAAAAAAAAAAAACpAAAAAAAAAKoAAAAAAAAAAAAAAKoAAAAAAAAAqwAAAAAAAAAAAAAAqwAAAAAAAACsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnAAAAAAAAAKcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					468,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"documentation\":{\"kind\":\"markdown\",\"value\":\"Returns `true` if the given pattern matches a prefix of this\\nstring slice.\\n\\nReturns `false` if it does not.\\n\\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\\nfunction or closure that determines if a character matches.\\n\\n[`char`]: prim@char\\n[pattern]: self::pattern\\n\\n# Examples\\n\\nBasic usage:\\n\\n```rust\\nlet bananas = \\\"bananas\\\";\\n\\nassert!(bananas.starts_with(\\\"bana\\\"));\\nassert!(!bananas.starts_with(\\\"nana\\\"));\\n```\"},\"insertTextFormat\":2,\"detail\":\"fn(&self, P) -> bool\",\"kind\":2,\"sortText\":\"ffffffec\",\"labelDetails\":{\"description\":\"fn(&self, P) -> bool\"},\"filterText\":\"starts_with\",\"additionalTextEdits\":[],\"deprecated\":false,\"label\":\"starts_with(…)\",\"preselect\":true,\"textEdit\":{\"range\":{\"start\":{\"line\":6,\"character\":35},\"end\":{\"line\":6,\"character\":39}},\"newText\":\"starts_with(${1:pat})$0\"},\"command\":{\"title\":\"triggerParameterHints\",\"command\":\"editor.action.triggerParameterHints\"}}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							201,
							467,
							5
						],
						"trigger": "starts_with(…)"
					},
					"AgAAAKgAAAAAAAAAqAAAAAAAAAAEAAAAc3RhcqgAAAAAAAAAuAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsAAAAAAAAAKwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					470,
					1,
					"insert_snippet",
					{
						"contents": "\"${0:$SELECTION}\""
					},
					"AgAAALQAAAAAAAAAtAAAAAAAAAADAAAAcGF0tAAAAAAAAAC5AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0AAAAAAAAALcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					471,
					1,
					"insert",
					{
						"characters": "00000"
					},
					"BgAAALUAAAAAAAAAtgAAAAAAAAAAAAAAtgAAAAAAAAC2AAAAAAAAAAMAAABwYXS2AAAAAAAAALcAAAAAAAAAAAAAALcAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAAC5AAAAAAAAAAAAAAC5AAAAAAAAALoAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1AAAAAAAAALgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					474,
					1,
					"left_delete",
					null,
					"AQAAAJ8AAAAAAAAAnwAAAAAAAAAHAAAALmludG8oKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfAAAAAAAAAKYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					479,
					1,
					"insert",
					{
						"characters": "format!"
					},
					"BwAAAJkAAAAAAAAAmgAAAAAAAAAAAAAAmgAAAAAAAACbAAAAAAAAAAAAAACbAAAAAAAAAJwAAAAAAAAAAAAAAJwAAAAAAAAAnQAAAAAAAAAAAAAAnQAAAAAAAACeAAAAAAAAAAAAAACeAAAAAAAAAJ8AAAAAAAAAAAAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZAAAAAAAAAJkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					480,
					1,
					"insert",
					{
						"characters": "(\""
					},
					"AgAAAKAAAAAAAAAAoQAAAAAAAAAAAAAAoQAAAAAAAACiAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgAAAAAAAAAKAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					481,
					1,
					"insert",
					{
						"characters": "{}"
					},
					"AgAAAKIAAAAAAAAAowAAAAAAAAAAAAAAowAAAAAAAACkAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiAAAAAAAAAKIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					483,
					1,
					"insert",
					{
						"characters": ":x"
					},
					"AgAAAKMAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAAClAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjAAAAAAAAAKMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					485,
					1,
					"insert",
					{
						"characters": "\","
					},
					"AgAAAKYAAAAAAAAApwAAAAAAAAAAAAAApwAAAAAAAACoAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmAAAAAAAAAKYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					486,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKgAAAAAAAAAqQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoAAAAAAAAAKgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					489,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAALAAAAAAAAAAsQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					492,
					11,
					"left_delete",
					null,
					"CwAAAJcAAAAAAAAAlwAAAAAAAAABAAAAd5YAAAAAAAAAlgAAAAAAAAABAAAAZZUAAAAAAAAAlQAAAAAAAAABAAAAbpQAAAAAAAAAlAAAAAAAAAABAAAAOpMAAAAAAAAAkwAAAAAAAAABAAAAOpIAAAAAAAAAkgAAAAAAAAABAAAAZ5EAAAAAAAAAkQAAAAAAAAABAAAAbpAAAAAAAAAAkAAAAAAAAAABAAAAaY8AAAAAAAAAjwAAAAAAAAABAAAAco4AAAAAAAAAjgAAAAAAAAABAAAAdI0AAAAAAAAAjQAAAAAAAAABAAAAUw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYAAAAAAAAAJgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					495,
					1,
					"left_delete",
					null,
					"AQAAAKUAAAAAAAAApQAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmAAAAAAAAAKYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					497,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALoAAAAAAAAAuwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6AAAAAAAAALoAAAAAAAAA////////738"
				],
				[
					498,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALsAAAAAAAAAvQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7AAAAAAAAALsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					499,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAALwAAAAAAAAAvQAAAAAAAAAAAAAAvQAAAAAAAADCAAAAAAAAAAAAAADCAAAAAAAAAMMAAAAAAAAAAAAAAMMAAAAAAAAAyAAAAAAAAAAAAAAAvQAAAAAAAAC9AAAAAAAAAAUAAAAgICAgCb0AAAAAAAAAwwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8AAAAAAAAALwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					502,
					1,
					"insert",
					{
						"characters": "printf"
					},
					"BgAAAMMAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADFAAAAAAAAAAAAAADFAAAAAAAAAMYAAAAAAAAAAAAAAMYAAAAAAAAAxwAAAAAAAAAAAAAAxwAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMkAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDAAAAAAAAAMMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					503,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMkAAAAAAAAAywAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					504,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAMkAAAAAAAAAyQAAAAAAAAABAAAAKMkAAAAAAAAAyQAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKAAAAAAAAAMoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					505,
					1,
					"left_delete",
					null,
					"AQAAAMgAAAAAAAAAyAAAAAAAAAABAAAAZg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					506,
					1,
					"insert",
					{
						"characters": "ln"
					},
					"AgAAAMgAAAAAAAAAyQAAAAAAAAAAAAAAyQAAAAAAAADKAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIAAAAAAAAAMgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					508,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"documentation\":{\"kind\":\"markdown\",\"value\":\"Prints to the standard output, with a newline.\\n\\nOn all platforms, the newline is the LINE FEED character (`\\\\n`/`U+000A`) alone\\n(no additional CARRIAGE RETURN (`\\\\r`/`U+000D`)).\\n\\nThis macro uses the same syntax as [`format!`], but writes to the standard output instead.\\nSee [`std::fmt`] for more information.\\n\\nUse `println!` only for the primary output of your program. Use\\n[`eprintln!`] instead to print error and progress messages.\\n\\n[`std::fmt`]: crate::fmt\\n[`eprintln!`]: crate::eprintln\\n\\n# Panics\\n\\nPanics if writing to [`io::stdout`] fails.\\n\\n[`io::stdout`]: crate::io::stdout\\n\\n# Examples\\n\\n```rust\\nprintln!(); // prints just a newline\\nprintln!(\\\"hello there!\\\");\\nprintln!(\\\"format {} arguments\\\", \\\"some\\\");\\n```\"},\"textEdit\":{\"range\":{\"start\":{\"line\":7,\"character\":6},\"end\":{\"line\":7,\"character\":13}},\"newText\":\"println!($0)\"},\"deprecated\":false,\"label\":\"println!(…)\",\"detail\":\"macro_rules! println\",\"additionalTextEdits\":[],\"kind\":3,\"sortText\":\"ffffffef\",\"labelDetails\":{\"description\":\"macro_rules! println\"},\"filterText\":\"println!\",\"insertTextFormat\":2}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							235,
							506,
							2
						],
						"trigger": "println!(…)"
					},
					"AgAAAMMAAAAAAAAAwwAAAAAAAAAHAAAAcHJpbnRsbsMAAAAAAAAAzQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKAAAAAAAAAMoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					509,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Line.sublime-macro"
					},
					"AQAAAL0AAAAAAAAAvQAAAAAAAAARAAAAICAgIAkJcHJpbnRsbiEoKQo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMAAAAAAAAAMwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					511,
					5,
					"swap_line_up",
					null,
					"CgAAAN0AAAAAAAAA3QAAAAAAAAAeAAAAICAgIHByaW50bG4hKCJ7Onh9IiwgZGlnZXN0KTsK3AAAAAAAAAD6AAAAAAAAAAAAAADcAAAAAAAAANwAAAAAAAAAHgAAACAgICBwcmludGxuISgiezp4fSIsIGRpZ2VzdCk7CtYAAAAAAAAA9AAAAAAAAAAAAAAA1gAAAAAAAADWAAAAAAAAAB4AAAAgICAgcHJpbnRsbiEoIns6eH0iLCBkaWdlc3QpOwrVAAAAAAAAAPMAAAAAAAAAAAAAANUAAAAAAAAA1QAAAAAAAAAeAAAAICAgIHByaW50bG4hKCJ7Onh9IiwgZGlnZXN0KTsKxAAAAAAAAADiAAAAAAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAHgAAACAgICBwcmludGxuISgiezp4fSIsIGRpZ2VzdCk7Cr0AAAAAAAAA2wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdAAAAAAAAAN0AAAAAAAAAAAAAAAAAAAA"
				],
				[
					512,
					1,
					"insert",
					{
						"characters": "\t\t"
					},
					"AgAAAL0AAAAAAAAAvgAAAAAAAAAAAAAAvgAAAAAAAAC/AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9AAAAAAAAAL0AAAAAAAAAAAAAAAAAAAA"
				],
				[
					514,
					1,
					"insert",
					{
						"characters": "\nprintln!"
					},
					"CgAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADjAAAAAAAAAAAAAADjAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA5QAAAAAAAADmAAAAAAAAAAAAAADmAAAAAAAAAOcAAAAAAAAAAAAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADpAAAAAAAAAAAAAADpAAAAAAAAAOoAAAAAAAAAAAAAAOoAAAAAAAAA6wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcAAAAAAAAANwAAAAAAAAA////////738"
				],
				[
					515,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOsAAAAAAAAA7QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrAAAAAAAAAOsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					516,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAOwAAAAAAAAA7gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsAAAAAAAAAOwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					517,
					1,
					"insert",
					{
						"characters": "{}"
					},
					"AgAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA7gAAAAAAAADvAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtAAAAAAAAAO0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					519,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAPAAAAAAAAAA8QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwAAAAAAAAAPAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					520,
					1,
					"insert",
					{
						"characters": " index"
					},
					"BgAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA8gAAAAAAAADzAAAAAAAAAAAAAADzAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA9QAAAAAAAAAAAAAA9QAAAAAAAAD2AAAAAAAAAAAAAAD2AAAAAAAAAPcAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxAAAAAAAAAPEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					522,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPgAAAAAAAAA+QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4AAAAAAAAAPgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					529,
					1,
					"left_delete",
					null,
					"AQAAAI0AAAAAAAAAjQAAAAAAAAABAAAAKA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOAAAAAAAAAI4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					531,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									5,
									4
								],
								[
									5,
									5
								],
								"    ",
								null
							],
							[
								[
									6,
									4
								],
								[
									6,
									5
								],
								"    ",
								null
							],
							[
								[
									7,
									0
								],
								[
									7,
									2
								],
								"        ",
								null
							],
							[
								[
									8,
									0
								],
								[
									8,
									2
								],
								"        ",
								null
							],
							[
								[
									9,
									4
								],
								[
									9,
									5
								],
								"    ",
								null
							],
							[
								[
									10,
									4
								],
								[
									10,
									5
								],
								"    ",
								null
							],
							[
								[
									11,
									0
								],
								[
									12,
									0
								],
								"",
								null
							],
							[
								[
									13,
									0
								],
								[
									14,
									0
								],
								"",
								null
							]
						]
					},
					"CAAAABgBAAAAAAAAGAEAAAAAAAABAAAAChEBAAAAAAAAEQEAAAAAAAABAAAACgQBAAAAAAAACAEAAAAAAAABAAAACf0AAAAAAAAAAQEAAAAAAAABAAAACdwAAAAAAAAA5AAAAAAAAAACAAAACQm8AAAAAAAAAMQAAAAAAAAAAgAAAAkJiQAAAAAAAACNAAAAAAAAAAEAAAAJSgAAAAAAAABOAAAAAAAAAAEAAAAJ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNAAAAAAAAAI0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					535,
					1,
					"insert",
					{
						"characters": "\nbreak;"
					},
					"CAAAAAoBAAAAAAAACwEAAAAAAAAAAAAACwEAAAAAAAAXAQAAAAAAAAAAAAAXAQAAAAAAABgBAAAAAAAAAAAAABgBAAAAAAAAGQEAAAAAAAAAAAAAGQEAAAAAAAAaAQAAAAAAAAAAAAAaAQAAAAAAABsBAAAAAAAAAAAAABsBAAAAAAAAHAEAAAAAAAAAAAAAHAEAAAAAAAAdAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKAQAAAAAAAAoBAAAAAAAA////////738"
				],
				[
					541,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADoAAAAAAAAAOwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6AAAAAAAAADoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					542,
					1,
					"reindent",
					null,
					"AQAAADsAAAAAAAAAPwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7AAAAAAAAADsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					543,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAAD8AAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABBAAAAAAAAAAAAAABBAAAAAAAAAEIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/AAAAAAAAAD8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					544,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEIAAAAAAAAAQwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCAAAAAAAAAEIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					545,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEMAAAAAAAAARQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDAAAAAAAAAEMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					546,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAEQAAAAAAAAARQAAAAAAAAAAAAAARQAAAAAAAABGAAAAAAAAAAAAAABGAAAAAAAAAEcAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAAAAAAAAAEQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					547,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAAEcAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABJAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHAAAAAAAAAEcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					548,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEkAAAAAAAAASgAAAAAAAAAAAAAASgAAAAAAAABLAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJAAAAAAAAAEkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					549,
					3,
					"left_delete",
					null,
					"AwAAAEoAAAAAAAAASgAAAAAAAAABAAAAPUkAAAAAAAAASQAAAAAAAAABAAAAIEgAAAAAAAAASAAAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLAAAAAAAAAEsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					550,
					1,
					"insert",
					{
						"characters": "mut"
					},
					"AwAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIAAAAAAAAAEgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					551,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABNAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLAAAAAAAAAEsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					552,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAE0AAAAAAAAATgAAAAAAAAAAAAAATgAAAAAAAABPAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNAAAAAAAAAE0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					553,
					11,
					"left_delete",
					null,
					"CwAAAE4AAAAAAAAATgAAAAAAAAABAAAAPU0AAAAAAAAATQAAAAAAAAABAAAAIEwAAAAAAAAATAAAAAAAAAABAAAAaUsAAAAAAAAASwAAAAAAAAABAAAAIEoAAAAAAAAASgAAAAAAAAABAAAAdEkAAAAAAAAASQAAAAAAAAABAAAAdUgAAAAAAAAASAAAAAAAAAABAAAAbUcAAAAAAAAARwAAAAAAAAABAAAAIEYAAAAAAAAARgAAAAAAAAABAAAAdEUAAAAAAAAARQAAAAAAAAABAAAAZUQAAAAAAAAARAAAAAAAAAABAAAAbA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPAAAAAAAAAE8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					554,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAEMAAAAAAAAAQwAAAAAAAAABAAAAKEMAAAAAAAAAQwAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAAAAAAAAAEQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					555,
					5,
					"left_delete",
					null,
					"BQAAAEIAAAAAAAAAQgAAAAAAAAABAAAAIEEAAAAAAAAAQQAAAAAAAAABAAAAckAAAAAAAAAAQAAAAAAAAAABAAAAbz8AAAAAAAAAPwAAAAAAAAABAAAAZj4AAAAAAAAAPgAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDAAAAAAAAAEMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					556,
					4,
					"left_delete",
					null,
					"BAAAAD0AAAAAAAAAPQAAAAAAAAABAAAAIDwAAAAAAAAAPAAAAAAAAAABAAAAIDsAAAAAAAAAOwAAAAAAAAABAAAAIDoAAAAAAAAAOgAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+AAAAAAAAAD4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AgAAAIcAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwAAAAAAAABnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACSAAAAAAAAAAAAAACSAAAAAAAAAJMAAAAAAAAAAAAAAJMAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACVAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " hash"
					},
					"BQAAAJUAAAAAAAAAlgAAAAAAAAAAAAAAlgAAAAAAAACXAAAAAAAAAAAAAACXAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAmQAAAAAAAAAAAAAAmQAAAAAAAACaAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQAAAAAAAACVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJoAAAAAAAAAmwAAAAAAAAAAAAAAmwAAAAAAAACcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgAAAAAAAACaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " formt"
					},
					"BgAAAJwAAAAAAAAAnQAAAAAAAAAAAAAAnQAAAAAAAACeAAAAAAAAAAAAAACeAAAAAAAAAJ8AAAAAAAAAAAAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAAChAAAAAAAAAAAAAAChAAAAAAAAAKIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"left_delete",
					null,
					"AQAAAKEAAAAAAAAAoQAAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAogAAAAAAAACiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "at!"
					},
					"AwAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAACjAAAAAAAAAKQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQAAAAAAAAChAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKQAAAAAAAAApgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAAAAAAAAACkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAKUAAAAAAAAApwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQAAAAAAAAClAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "{:x}"
					},
					"BAAAAKYAAAAAAAAApwAAAAAAAAAAAAAApwAAAAAAAACoAAAAAAAAAAAAAACoAAAAAAAAAKkAAAAAAAAAAAAAAKkAAAAAAAAAqgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgAAAAAAAACmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKsAAAAAAAAArAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwAAAAAAAACrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " digest"
					},
					"BwAAAKwAAAAAAAAArQAAAAAAAAAAAAAArQAAAAAAAACuAAAAAAAAAAAAAACuAAAAAAAAAK8AAAAAAAAAAAAAAK8AAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAACxAAAAAAAAAAAAAACxAAAAAAAAALIAAAAAAAAAAAAAALIAAAAAAAAAswAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAAAAAAAAACsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALQAAAAAAAAAtQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAAAAAAAAAC0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "hash"
					},
					"BQAAAMEAAAAAAAAAwgAAAAAAAAAAAAAAwgAAAAAAAADCAAAAAAAAABcAAABmb3JtYXQhKCJ7Onh9IiwgZGlnZXN0KcIAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AAAAAAAAADBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "ket"
					},
					"BAAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACRAAAAAAAAAAUAAABjb25zdJEAAAAAAAAAkgAAAAAAAAAAAAAAkgAAAAAAAACTAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAAAAAAAAACVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					3,
					"left_delete",
					null,
					"AwAAAJIAAAAAAAAAkgAAAAAAAAABAAAAdJEAAAAAAAAAkQAAAAAAAAABAAAAZZAAAAAAAAAAkAAAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAkwAAAAAAAACTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACSAAAAAAAAAAAAAACSAAAAAAAAAJMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Line.sublime-macro"
					},
					"AQAAANsAAAAAAAAA2wAAAAAAAAAmAAAAICAgICAgICAgICAgcHJpbnRsbiEoIns6eH0iLCBkaWdlc3QpOwo",
					"AQAAAAAAAAABAAAA/gAAAAAAAAD+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Line.sublime-macro"
					},
					"AQAAANsAAAAAAAAA2wAAAAAAAAAjAAAAICAgICAgICAgICAgcHJpbnRsbiEoInt9IiwgaW5kZXgpOwo",
					"AQAAAAAAAAABAAAA2wAAAAAAAADbAAAAAAAAAAAAAAAAAAAA"
				],
				[
					45,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AwAAANoAAAAAAAAA2wAAAAAAAAAAAAAA2wAAAAAAAADjAAAAAAAAAAAAAADjAAAAAAAAAOQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwAAAAAAAADPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "hash."
					},
					"BQAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA5QAAAAAAAADmAAAAAAAAAAAAAADmAAAAAAAAAOcAAAAAAAAAAAAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADpAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "get"
					},
					"AwAAAOkAAAAAAAAA6gAAAAAAAAAAAAAA6gAAAAAAAADrAAAAAAAAAAAAAADrAAAAAAAAAOwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QAAAAAAAADpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOwAAAAAAAAA7gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AAAAAAAAADsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QAAAAAAAADtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wAAAAAAAADvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAAFtA"
				],
				[
					102,
					1,
					"left_delete",
					null,
					"AQAAAOQAAAAAAAAA5AAAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAA5QAAAAAAAADlAAAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA5QAAAAAAAADmAAAAAAAAAAAAAADmAAAAAAAAAOcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wAAAAAAAADnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "token"
					},
					"BQAAAOgAAAAAAAAA6QAAAAAAAAAAAAAA6QAAAAAAAADqAAAAAAAAAAAAAADqAAAAAAAAAOsAAAAAAAAAAAAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADtAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AAAAAAAAADoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA7gAAAAAAAADvAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QAAAAAAAADtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wAAAAAAAADvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "\noru"
					},
					"BQAAAPwAAAAAAAAA/QAAAAAAAAAAAAAA/QAAAAAAAAAGAQAAAAAAAAAAAAAGAQAAAAAAAAcBAAAAAAAAAAAAAAcBAAAAAAAACAEAAAAAAAAAAAAACAEAAAAAAAAJAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AAAAAAAAAD8AAAAAAAAAP///////+9/"
				],
				[
					110,
					3,
					"left_delete",
					null,
					"AwAAAAgBAAAAAAAACAEAAAAAAAABAAAAdQcBAAAAAAAABwEAAAAAAAABAAAAcgYBAAAAAAAABgEAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAACQEAAAAAAAAJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "print"
					},
					"BQAAAAYBAAAAAAAABwEAAAAAAAAAAAAABwEAAAAAAAAIAQAAAAAAAAAAAAAIAQAAAAAAAAkBAAAAAAAAAAAAAAkBAAAAAAAACgEAAAAAAAAAAAAACgEAAAAAAAALAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgEAAAAAAAAGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"documentation\":{\"kind\":\"markdown\",\"value\":\"Prints to the standard output, with a newline.\\n\\nOn all platforms, the newline is the LINE FEED character (`\\\\n`/`U+000A`) alone\\n(no additional CARRIAGE RETURN (`\\\\r`/`U+000D`)).\\n\\nThis macro uses the same syntax as [`format!`], but writes to the standard output instead.\\nSee [`std::fmt`] for more information.\\n\\nUse `println!` only for the primary output of your program. Use\\n[`eprintln!`] instead to print error and progress messages.\\n\\n[`std::fmt`]: crate::fmt\\n[`eprintln!`]: crate::eprintln\\n\\n# Panics\\n\\nPanics if writing to [`io::stdout`] fails.\\n\\n[`io::stdout`]: crate::io::stdout\\n\\n# Examples\\n\\n```rust\\nprintln!(); // prints just a newline\\nprintln!(\\\"hello there!\\\");\\nprintln!(\\\"format {} arguments\\\", \\\"some\\\");\\n```\"},\"textEdit\":{\"range\":{\"start\":{\"line\":9,\"character\":9},\"end\":{\"line\":9,\"character\":14}},\"newText\":\"println!($0)\"},\"deprecated\":false,\"label\":\"println!(…)\",\"detail\":\"macro_rules! println\",\"additionalTextEdits\":[],\"kind\":3,\"sortText\":\"ffffffef\",\"labelDetails\":{\"description\":\"macro_rules! println\"},\"filterText\":\"println!\",\"insertTextFormat\":2}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							231,
							111,
							5
						],
						"trigger": "println!(…)"
					},
					"AgAAAAYBAAAAAAAABgEAAAAAAAAFAAAAcHJpbnQGAQAAAAAAABABAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwEAAAAAAAALAQAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAA8BAAAAAAAAEQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwEAAAAAAAAPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "{}"
					},
					"AgAAABABAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAASAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAEAAAAAAAAQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABMBAAAAAAAAFAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwEAAAAAAAATAQAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": " token"
					},
					"BgAAABQBAAAAAAAAFQEAAAAAAAAAAAAAFQEAAAAAAAAWAQAAAAAAAAAAAAAWAQAAAAAAABcBAAAAAAAAAAAAABcBAAAAAAAAGAEAAAAAAAAAAAAAGAEAAAAAAAAZAQAAAAAAAAAAAAAZAQAAAAAAABoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAEAAAAAAAAUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "M"
					},
					"AQAAABsBAAAAAAAAHAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwEAAAAAAAAbAQAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"left_delete",
					null,
					"AQAAABsBAAAAAAAAGwEAAAAAAAABAAAATQ",
					"AQAAAAAAAAABAAAAHAEAAAAAAAAcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABsBAAAAAAAAHAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwEAAAAAAAAbAQAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									8,
									8
								],
								[
									8,
									9
								],
								"    ",
								null
							],
							[
								[
									9,
									8
								],
								[
									9,
									9
								],
								"    ",
								null
							]
						]
					},
					"AgAAAAUBAAAAAAAACQEAAAAAAAABAAAACeMAAAAAAAAA5wAAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAHAEAAAAAAAAcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gAAAAAAAAD+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"left_delete",
					null,
					"AQAAAP4AAAAAAAAA/gAAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": ".unwr"
					},
					"BQAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA/wAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAEBAAAAAAAAAAAAAAEBAAAAAAAAAgEAAAAAAAAAAAAAAgEAAAAAAAADAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gAAAAAAAAD+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"documentation\":{\"kind\":\"markdown\",\"value\":\"Returns the contained [`Some`] value, consuming the `self` value.\\n\\nBecause this function may panic, its use is generally discouraged.\\nInstead, prefer to use pattern matching and handle the [`None`]\\ncase explicitly, or call [`unwrap_or`], [`unwrap_or_else`], or\\n[`unwrap_or_default`].\\n\\n[`unwrap_or`]: Option::unwrap_or\\n[`unwrap_or_else`]: Option::unwrap_or_else\\n[`unwrap_or_default`]: Option::unwrap_or_default\\n\\n# Panics\\n\\nPanics if the self value equals [`None`].\\n\\n# Examples\\n\\n```rust\\nlet x = Some(\\\"air\\\");\\nassert_eq!(x.unwrap(), \\\"air\\\");\\n```\\n\\n```rust\\nlet x: Option<&str> = None;\\nassert_eq!(x.unwrap(), \\\"air\\\"); // fails\\n```\"},\"insertTextFormat\":2,\"detail\":\"const fn(self) -> T\",\"kind\":2,\"sortText\":\"ffffffec\",\"labelDetails\":{\"description\":\"const fn(self) -> T\"},\"filterText\":\"unwrap\",\"additionalTextEdits\":[],\"deprecated\":false,\"label\":\"unwrap()\",\"preselect\":true,\"textEdit\":{\"range\":{\"start\":{\"line\":8,\"character\":36},\"end\":{\"line\":8,\"character\":40}},\"newText\":\"unwrap()$0\"}}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							248,
							133,
							5
						],
						"trigger": "unwrap()"
					},
					"AgAAAP8AAAAAAAAA/wAAAAAAAAAEAAAAdW53cv8AAAAAAAAABwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwEAAAAAAAADAQAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": ".cha"
					},
					"BAAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD5AAAAAAAAAAAAAAD5AAAAAAAAAPoAAAAAAAAAAAAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wAAAAAAAAD3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"documentation\":{\"kind\":\"markdown\",\"value\":\"Returns an iterator over the [`char`]s of a string slice.\\n\\nAs a string slice consists of valid UTF-8, we can iterate through a\\nstring slice by [`char`]. This method returns such an iterator.\\n\\nIt's important to remember that [`char`] represents a Unicode Scalar\\nValue, and might not match your idea of what a 'character' is. Iteration\\nover grapheme clusters may be what you actually want. This functionality\\nis not provided by Rust's standard library, check crates.io instead.\\n\\n# Examples\\n\\nBasic usage:\\n\\n```rust\\nlet word = \\\"goodbye\\\";\\n\\nlet count = word.chars().count();\\nassert_eq!(7, count);\\n\\nlet mut chars = word.chars();\\n\\nassert_eq!(Some('g'), chars.next());\\nassert_eq!(Some('o'), chars.next());\\nassert_eq!(Some('o'), chars.next());\\nassert_eq!(Some('d'), chars.next());\\nassert_eq!(Some('b'), chars.next());\\nassert_eq!(Some('y'), chars.next());\\nassert_eq!(Some('e'), chars.next());\\n\\nassert_eq!(None, chars.next());\\n```\\n\\nRemember, [`char`]s might not match your intuition about characters:\\n\\n[`char`]: prim@char\\n\\n```rust\\nlet y = \\\"y̆\\\";\\n\\nlet mut chars = y.chars();\\n\\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\\nassert_eq!(Some('\\\\u{0306}'), chars.next());\\n\\nassert_eq!(None, chars.next());\\n```\"},\"insertTextFormat\":2,\"detail\":\"fn(&self) -> Chars\",\"kind\":2,\"sortText\":\"ffffffec\",\"labelDetails\":{\"description\":\"fn(&self) -> Chars\"},\"filterText\":\"chars\",\"additionalTextEdits\":[],\"deprecated\":false,\"label\":\"chars()\",\"preselect\":true,\"textEdit\":{\"range\":{\"start\":{\"line\":8,\"character\":29},\"end\":{\"line\":8,\"character\":32}},\"newText\":\"chars()$0\"}}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							252,
							141,
							4
						],
						"trigger": "chars()"
					},
					"AgAAAPgAAAAAAAAA+AAAAAAAAAADAAAAY2hh+AAAAAAAAAD/AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wAAAAAAAAD7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"left_delete",
					null,
					"AQAAAAABAAAAAAAAAAEAAAAAAAAPAAAAZ2V0KDYpLnVud3JhcCgp",
					"AQAAAAAAAAABAAAAAAEAAAAAAAAPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"right_delete",
					null,
					"AQAAAAABAAAAAAAAAAEAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"left_delete",
					null,
					"AQAAAP8AAAAAAAAA/wAAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAP8AAAAAAAAAAAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"documentation\":{\"kind\":\"markdown\",\"value\":\"Transforms an iterator into a collection.\\n\\n`collect()` can take anything iterable, and turn it into a relevant\\ncollection. This is one of the more powerful methods in the standard\\nlibrary, used in a variety of contexts.\\n\\nThe most basic pattern in which `collect()` is used is to turn one\\ncollection into another. You take a collection, call [`iter`] on it,\\ndo a bunch of transformations, and then `collect()` at the end.\\n\\n`collect()` can also create instances of types that are not typical\\ncollections. For example, a [`String`] can be built from [`char`]s,\\nand an iterator of [`Result<T, E>`][`Result`] items can be collected\\ninto `Result<Collection<T>, E>`. See the examples below for more.\\n\\nBecause `collect()` is so general, it can cause problems with type\\ninference. As such, `collect()` is one of the few times you'll see\\nthe syntax affectionately known as the 'turbofish': `::<>`. This\\nhelps the inference algorithm understand specifically which collection\\nyou're trying to collect into.\\n\\n# Examples\\n\\nBasic usage:\\n\\n```rust\\nlet a = [1, 2, 3];\\n\\nlet doubled: Vec<i32> = a.iter()\\n                         .map(|&x| x * 2)\\n                         .collect();\\n\\nassert_eq!(vec![2, 4, 6], doubled);\\n```\\n\\nNote that we needed the `: Vec<i32>` on the left-hand side. This is because\\nwe could collect into, for example, a [`VecDeque<T>`] instead:\\n\\n[`VecDeque<T>`]: ../../std/collections/struct.VecDeque.html\\n\\n```rust\\nuse std::collections::VecDeque;\\n\\nlet a = [1, 2, 3];\\n\\nlet doubled: VecDeque<i32> = a.iter().map(|&x| x * 2).collect();\\n\\nassert_eq!(2, doubled[0]);\\nassert_eq!(4, doubled[1]);\\nassert_eq!(6, doubled[2]);\\n```\\n\\nUsing the 'turbofish' instead of annotating `doubled`:\\n\\n```rust\\nlet a = [1, 2, 3];\\n\\nlet doubled = a.iter().map(|x| x * 2).collect::<Vec<i32>>();\\n\\nassert_eq!(vec![2, 4, 6], doubled);\\n```\\n\\nBecause `collect()` only cares about what you're collecting into, you can\\nstill use a partial type hint, `_`, with the turbofish:\\n\\n```rust\\nlet a = [1, 2, 3];\\n\\nlet doubled = a.iter().map(|x| x * 2).collect::<Vec<_>>();\\n\\nassert_eq!(vec![2, 4, 6], doubled);\\n```\\n\\nUsing `collect()` to make a [`String`]:\\n\\n```rust\\nlet chars = ['g', 'd', 'k', 'k', 'n'];\\n\\nlet hello: String = chars.iter()\\n    .map(|&x| x as u8)\\n    .map(|x| (x + 1) as char)\\n    .collect();\\n\\nassert_eq!(\\\"hello\\\", hello);\\n```\\n\\nIf you have a list of [`Result<T, E>`][`Result`]s, you can use `collect()` to\\nsee if any of them failed:\\n\\n```rust\\nlet results = [Ok(1), Err(\\\"nope\\\"), Ok(3), Err(\\\"bad\\\")];\\n\\nlet result: Result<Vec<_>, &str> = results.iter().cloned().collect();\\n\\n// gives us the first error\\nassert_eq!(Err(\\\"nope\\\"), result);\\n\\nlet results = [Ok(1), Ok(3)];\\n\\nlet result: Result<Vec<_>, &str> = results.iter().cloned().collect();\\n\\n// gives us the list of answers\\nassert_eq!(Ok(vec![1, 3]), result);\\n```\\n\\n[`iter`]: Iterator::next\\n[`String`]: ../../std/string/struct.String.html\\n[`char`]: type@char\"},\"insertTextFormat\":2,\"detail\":\"fn(self) -> B\",\"kind\":2,\"sortText\":\"ffffffec\",\"labelDetails\":{\"description\":\"fn(self) -> B\"},\"filterText\":\"collect\",\"additionalTextEdits\":[],\"deprecated\":false,\"label\":\"collect() (as Iterator)\",\"preselect\":true,\"textEdit\":{\"range\":{\"start\":{\"line\":8,\"character\":37},\"end\":{\"line\":8,\"character\":37}},\"newText\":\"collect()$0\"}}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": true,
						"query_change_id":
						[
							260,
							149,
							1
						],
						"trigger": "collect() (as Iterator)"
					},
					"AQAAAAABAAAAAAAACQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAAkBAAAAAAAACgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQEAAAAAAAAJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"left_delete",
					null,
					"AQAAAAkBAAAAAAAACQEAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAACgEAAAAAAAAKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": "::<ch"
					},
					"BQAAAAcBAAAAAAAACAEAAAAAAAAAAAAACAEAAAAAAAAJAQAAAAAAAAAAAAAJAQAAAAAAAAoBAAAAAAAAAAAAAAoBAAAAAAAACwEAAAAAAAAAAAAACwEAAAAAAAAMAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwEAAAAAAAAHAQAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					2,
					"left_delete",
					null,
					"AgAAAAsBAAAAAAAACwEAAAAAAAABAAAAaAoBAAAAAAAACgEAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAADAEAAAAAAAAMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": "C"
					},
					"AQAAAAoBAAAAAAAACwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgEAAAAAAAAKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"left_delete",
					null,
					"AQAAAAoBAAAAAAAACgEAAAAAAAABAAAAQw",
					"AQAAAAAAAAABAAAACwEAAAAAAAALAQAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": "ch"
					},
					"AgAAAAoBAAAAAAAACwEAAAAAAAAAAAAACwEAAAAAAAAMAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgEAAAAAAAAKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					2,
					"left_delete",
					null,
					"AgAAAAsBAAAAAAAACwEAAAAAAAABAAAAaAoBAAAAAAAACgEAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAADAEAAAAAAAAMAQAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					11,
					"left_delete",
					null,
					"CwAAAAkBAAAAAAAACQEAAAAAAAABAAAAPAgBAAAAAAAACAEAAAAAAAABAAAAOgcBAAAAAAAABwEAAAAAAAABAAAAOgYBAAAAAAAABgEAAAAAAAABAAAAdAUBAAAAAAAABQEAAAAAAAABAAAAYwQBAAAAAAAABAEAAAAAAAABAAAAZQMBAAAAAAAAAwEAAAAAAAABAAAAbAIBAAAAAAAAAgEAAAAAAAABAAAAbAEBAAAAAAAAAQEAAAAAAAABAAAAbwABAAAAAAAAAAEAAAAAAAABAAAAY/8AAAAAAAAA/wAAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAACgEAAAAAAAAKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					2,
					"right_delete",
					null,
					"AgAAAP8AAAAAAAAA/wAAAAAAAAABAAAAKP8AAAAAAAAA/wAAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": "M"
					},
					"AQAAAP8AAAAAAAAAAAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"left_delete",
					null,
					"AQAAAP8AAAAAAAAA/wAAAAAAAAABAAAATQ",
					"AQAAAAAAAAABAAAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAP8AAAAAAAAAAAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					2,
					"left_delete",
					null,
					"AgAAAP4AAAAAAAAA/gAAAAAAAAABAAAAKf0AAAAAAAAA/QAAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"right_delete",
					null,
					"AQAAAP0AAAAAAAAA/QAAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAA/QAAAAAAAAD9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAP0AAAAAAAAA/gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QAAAAAAAAD9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					7,
					"left_delete",
					null,
					"BwAAAP0AAAAAAAAA/QAAAAAAAAABAAAALvwAAAAAAAAA/AAAAAAAAAABAAAAc/sAAAAAAAAA+wAAAAAAAAABAAAAcvoAAAAAAAAA+gAAAAAAAAABAAAAYfkAAAAAAAAA+QAAAAAAAAABAAAAaPgAAAAAAAAA+AAAAAAAAAABAAAAY/cAAAAAAAAA9wAAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAA/gAAAAAAAAD+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": ".cha"
					},
					"BAAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD5AAAAAAAAAAAAAAD5AAAAAAAAAPoAAAAAAAAAAAAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wAAAAAAAAD3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"documentation\":{\"kind\":\"markdown\",\"value\":\"Returns an iterator over the [`char`]s of a string slice.\\n\\nAs a string slice consists of valid UTF-8, we can iterate through a\\nstring slice by [`char`]. This method returns such an iterator.\\n\\nIt's important to remember that [`char`] represents a Unicode Scalar\\nValue, and might not match your idea of what a 'character' is. Iteration\\nover grapheme clusters may be what you actually want. This functionality\\nis not provided by Rust's standard library, check crates.io instead.\\n\\n# Examples\\n\\nBasic usage:\\n\\n```rust\\nlet word = \\\"goodbye\\\";\\n\\nlet count = word.chars().count();\\nassert_eq!(7, count);\\n\\nlet mut chars = word.chars();\\n\\nassert_eq!(Some('g'), chars.next());\\nassert_eq!(Some('o'), chars.next());\\nassert_eq!(Some('o'), chars.next());\\nassert_eq!(Some('d'), chars.next());\\nassert_eq!(Some('b'), chars.next());\\nassert_eq!(Some('y'), chars.next());\\nassert_eq!(Some('e'), chars.next());\\n\\nassert_eq!(None, chars.next());\\n```\\n\\nRemember, [`char`]s might not match your intuition about characters:\\n\\n[`char`]: prim@char\\n\\n```rust\\nlet y = \\\"y̆\\\";\\n\\nlet mut chars = y.chars();\\n\\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\\nassert_eq!(Some('\\\\u{0306}'), chars.next());\\n\\nassert_eq!(None, chars.next());\\n```\"},\"insertTextFormat\":2,\"detail\":\"fn(&self) -> Chars\",\"kind\":2,\"sortText\":\"ffffffec\",\"labelDetails\":{\"description\":\"fn(&self) -> Chars\"},\"filterText\":\"chars\",\"additionalTextEdits\":[],\"deprecated\":false,\"label\":\"chars()\",\"preselect\":true,\"textEdit\":{\"range\":{\"start\":{\"line\":8,\"character\":29},\"end\":{\"line\":8,\"character\":32}},\"newText\":\"chars()$0\"}}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							287,
							212,
							4
						],
						"trigger": "chars()"
					},
					"AgAAAPgAAAAAAAAA+AAAAAAAAAADAAAAY2hh+AAAAAAAAAD/AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wAAAAAAAAD7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAP8AAAAAAAAAAAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"left_delete",
					null,
					"AQAAAP8AAAAAAAAA/wAAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAP8AAAAAAAAAAAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": "nth/"
					},
					"BAAAAAABAAAAAAAAAQEAAAAAAAAAAAAAAQEAAAAAAAACAQAAAAAAAAAAAAACAQAAAAAAAAMBAAAAAAAAAAAAAAMBAAAAAAAABAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAPC/"
				],
				[
					293,
					1,
					"left_delete",
					null,
					"AQAAAAMBAAAAAAAAAwEAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAABAEAAAAAAAAEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					294,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAMBAAAAAAAABQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwEAAAAAAAADAQAAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAAQBAAAAAAAABQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAEAAAAAAAAEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": ".un"
					},
					"AwAAAAYBAAAAAAAABwEAAAAAAAAAAAAABwEAAAAAAAAIAQAAAAAAAAAAAAAIAQAAAAAAAAkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgEAAAAAAAAGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					298,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"documentation\":{\"kind\":\"markdown\",\"value\":\"Returns the contained [`Some`] value, consuming the `self` value.\\n\\nBecause this function may panic, its use is generally discouraged.\\nInstead, prefer to use pattern matching and handle the [`None`]\\ncase explicitly, or call [`unwrap_or`], [`unwrap_or_else`], or\\n[`unwrap_or_default`].\\n\\n[`unwrap_or`]: Option::unwrap_or\\n[`unwrap_or_else`]: Option::unwrap_or_else\\n[`unwrap_or_default`]: Option::unwrap_or_default\\n\\n# Panics\\n\\nPanics if the self value equals [`None`].\\n\\n# Examples\\n\\n```rust\\nlet x = Some(\\\"air\\\");\\nassert_eq!(x.unwrap(), \\\"air\\\");\\n```\\n\\n```rust\\nlet x: Option<&str> = None;\\nassert_eq!(x.unwrap(), \\\"air\\\"); // fails\\n```\"},\"insertTextFormat\":2,\"detail\":\"const fn(self) -> T\",\"kind\":2,\"sortText\":\"ffffffec\",\"labelDetails\":{\"description\":\"const fn(self) -> T\"},\"filterText\":\"unwrap\",\"additionalTextEdits\":[],\"deprecated\":false,\"label\":\"unwrap()\",\"preselect\":true,\"textEdit\":{\"range\":{\"start\":{\"line\":8,\"character\":44},\"end\":{\"line\":8,\"character\":46}},\"newText\":\"unwrap()$0\"}}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							297,
							297,
							3
						],
						"trigger": "unwrap()"
					},
					"AgAAAAcBAAAAAAAABwEAAAAAAAACAAAAdW4HAQAAAAAAAA8BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQEAAAAAAAAJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": "M"
					},
					"AQAAAA8BAAAAAAAAEAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwEAAAAAAAAPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"left_delete",
					null,
					"AQAAAA8BAAAAAAAADwEAAAAAAAABAAAATQ",
					"AQAAAAAAAAABAAAAEAEAAAAAAAAQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					301,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAA8BAAAAAAAAEAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwEAAAAAAAAPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					314,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AgAAAAQBAAAAAAAABQEAAAAAAAAAAAAABQEAAAAAAAAFAQAAAAAAAAEAAAA2",
					"AQAAAAAAAAABAAAABAEAAAAAAAAFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAADoAAAAAAAAAOwAAAAAAAAAAAAAAOwAAAAAAAAA8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgAAAAAAAAA6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"reindent",
					null,
					"AQAAADwAAAAAAAAAQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAAAAAAAAAA8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAAEAAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABCAAAAAAAAAAAAAABCAAAAAAAAAEMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEMAAAAAAAAARAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAEQAAAAAAAAARQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAEUAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAABHAAAAAAAAAAAAAABHAAAAAAAAAEgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQAAAAAAAABFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"insert",
					{
						"characters": " 0..9"
					},
					"BQAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABNAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					325,
					1,
					"left_delete",
					null,
					"AQAAAEwAAAAAAAAATAAAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAATQAAAAAAAABNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAAEwAAAAAAAAATQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					327,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE0AAAAAAAAATgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQAAAAAAAABNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAE4AAAAAAAAAUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgAAAAAAAABOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					329,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAE8AAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFUAAAAAAAAAAAAAAFUAAAAAAAAAWQAAAAAAAAAAAAAAUAAAAAAAAABQAAAAAAAAAAQAAAAgICAgUAAAAAAAAABVAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwAAAAAAAABPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					331,
					11,
					"swap_line_down",
					null,
					"FgAAAGcAAAAAAAAAbQAAAAAAAAAAAAAAVgAAAAAAAABWAAAAAAAAAAYAAAAgICAgfQqpAAAAAAAAAK8AAAAAAAAAAAAAAGEAAAAAAAAAYQAAAAAAAAAGAAAAICAgIH0K1QAAAAAAAADbAAAAAAAAAAAAAACjAAAAAAAAAKMAAAAAAAAABgAAACAgICB9CvwAAAAAAAAAAgEAAAAAAAAAAAAAzwAAAAAAAADPAAAAAAAAAAYAAAAgICAgfQoyAQAAAAAAADgBAAAAAAAAAAAAAPYAAAAAAAAA9gAAAAAAAAAGAAAAICAgIH0KVQEAAAAAAABbAQAAAAAAAAAAAAAsAQAAAAAAACwBAAAAAAAABgAAACAgICB9CmgBAAAAAAAAbgEAAAAAAAAAAAAATwEAAAAAAABPAQAAAAAAAAYAAAAgICAgfQpyAQAAAAAAAHgBAAAAAAAAAAAAAGIBAAAAAAAAYgEAAAAAAAAGAAAAICAgIH0KhgEAAAAAAACMAQAAAAAAAAAAAABsAQAAAAAAAGwBAAAAAAAABgAAACAgICB9CowBAAAAAAAAkgEAAAAAAAAAAAAAgAEAAAAAAACAAQAAAAAAAAYAAAAgICAgfQqOAQAAAAAAAJQBAAAAAAAAAAAAAIYBAAAAAAAAhgEAAAAAAAAGAAAAICAgIH0K",
					"AQAAAAAAAAABAAAAWwAAAAAAAABbAAAAAAAAAAAAAAAAAFJA"
				],
				[
					332,
					1,
					"swap_line_up",
					null,
					"AgAAAIgBAAAAAAAAiAEAAAAAAAAGAAAAICAgIH0KhgEAAAAAAACMAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQEAAAAAAACNAQAAAAAAAAAAAAAAAFJA"
				],
				[
					334,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									4,
									0
								],
								[
									5,
									0
								],
								"",
								null
							],
							[
								[
									6,
									4
								],
								[
									7,
									0
								],
								"",
								null
							],
							[
								[
									8,
									8
								],
								[
									8,
									8
								],
								"    ",
								null
							],
							[
								[
									9,
									8
								],
								[
									9,
									8
								],
								"    ",
								null
							],
							[
								[
									10,
									0
								],
								[
									10,
									0
								],
								"    ",
								null
							],
							[
								[
									11,
									12
								],
								[
									11,
									12
								],
								"    ",
								null
							],
							[
								[
									12,
									12
								],
								[
									12,
									12
								],
								"    ",
								null
							],
							[
								[
									13,
									12
								],
								[
									13,
									12
								],
								"    ",
								null
							],
							[
								[
									14,
									8
								],
								[
									14,
									8
								],
								"    ",
								null
							],
							[
								[
									15,
									0
								],
								[
									15,
									0
								],
								"    ",
								null
							],
							[
								[
									16,
									0
								],
								[
									16,
									0
								],
								"    ",
								null
							]
						]
					},
					"CwAAAIABAAAAAAAAhAEAAAAAAAAAAAAAbAEAAAAAAABwAQAAAAAAAAAAAABqAQAAAAAAAG4BAAAAAAAAAAAAAFsBAAAAAAAAXwEAAAAAAAAAAAAAOAEAAAAAAAA8AQAAAAAAAAAAAAACAQAAAAAAAAYBAAAAAAAAAAAAAM8AAAAAAAAA0wAAAAAAAAAAAAAAqwAAAAAAAACvAAAAAAAAAAAAAABpAAAAAAAAAG0AAAAAAAAAAAAAAFQAAAAAAAAAVAAAAAAAAAACAAAACQo7AAAAAAAAADsAAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAiwEAAAAAAACLAQAAAAAAAAAAAAAAAFJA"
				],
				[
					336,
					1,
					"reindent",
					null,
					"AQAAADoAAAAAAAAAPgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgAAAAAAAAA6AAAAAAAAAAAAAAAAgEZA"
				],
				[
					337,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAD4AAAAAAAAAPwAAAAAAAAAAAAAAPwAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAEEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					338,
					1,
					"insert",
					{
						"characters": " mut"
					},
					"BAAAAEEAAAAAAAAAQgAAAAAAAAAAAAAAQgAAAAAAAABDAAAAAAAAAAAAAABDAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAARQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"insert",
					{
						"characters": " result"
					},
					"BwAAAEUAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAABHAAAAAAAAAAAAAABHAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAEsAAAAAAAAATAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQAAAAAAAABFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					1,
					"insert",
					{
						"characters": " vec!"
					},
					"BQAAAE4AAAAAAAAATwAAAAAAAAAAAAAATwAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFEAAAAAAAAAAAAAAFEAAAAAAAAAUgAAAAAAAAAAAAAAUgAAAAAAAABTAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgAAAAAAAABOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					342,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAFMAAAAAAAAAVQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwAAAAAAAABTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					344,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFUAAAAAAAAAVgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQAAAAAAAABVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					348,
					1,
					"insert",
					{
						"characters": "\nvec.a"
					},
					"BwAAAFQBAAAAAAAAVQEAAAAAAAAAAAAAVQEAAAAAAABlAQAAAAAAAAAAAABlAQAAAAAAAGYBAAAAAAAAAAAAAGYBAAAAAAAAZwEAAAAAAAAAAAAAZwEAAAAAAABoAQAAAAAAAAAAAABoAQAAAAAAAGkBAAAAAAAAAAAAAGkBAAAAAAAAagEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAEAAAAAAABUAQAAAAAAAP///////+9/"
				],
				[
					349,
					1,
					"left_delete",
					null,
					"AQAAAGkBAAAAAAAAaQEAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAagEAAAAAAABqAQAAAAAAAAAAAAAAAPC/"
				],
				[
					350,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAGkBAAAAAAAAagEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQEAAAAAAABpAQAAAAAAAAAAAAAAAPC/"
				],
				[
					351,
					1,
					"left_delete",
					null,
					"AQAAAGkBAAAAAAAAaQEAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAagEAAAAAAABqAQAAAAAAAAAAAAAAAPC/"
				],
				[
					352,
					1,
					"insert",
					{
						"characters": "app"
					},
					"AwAAAGkBAAAAAAAAagEAAAAAAAAAAAAAagEAAAAAAABrAQAAAAAAAAAAAABrAQAAAAAAAGwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQEAAAAAAABpAQAAAAAAAAAAAAAAAPC/"
				],
				[
					353,
					7,
					"left_delete",
					null,
					"BwAAAGsBAAAAAAAAawEAAAAAAAABAAAAcGoBAAAAAAAAagEAAAAAAAABAAAAcGkBAAAAAAAAaQEAAAAAAAABAAAAYWgBAAAAAAAAaAEAAAAAAAABAAAALmcBAAAAAAAAZwEAAAAAAAABAAAAY2YBAAAAAAAAZgEAAAAAAAABAAAAZWUBAAAAAAAAZQEAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAAbAEAAAAAAABsAQAAAAAAAAAAAAAAAPC/"
				],
				[
					354,
					1,
					"insert",
					{
						"characters": "result.app"
					},
					"CgAAAGUBAAAAAAAAZgEAAAAAAAAAAAAAZgEAAAAAAABnAQAAAAAAAAAAAABnAQAAAAAAAGgBAAAAAAAAAAAAAGgBAAAAAAAAaQEAAAAAAAAAAAAAaQEAAAAAAABqAQAAAAAAAAAAAABqAQAAAAAAAGsBAAAAAAAAAAAAAGsBAAAAAAAAbAEAAAAAAAAAAAAAbAEAAAAAAABtAQAAAAAAAAAAAABtAQAAAAAAAG4BAAAAAAAAAAAAAG4BAAAAAAAAbwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQEAAAAAAABlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					355,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"documentation\":{\"kind\":\"markdown\",\"value\":\"Moves all the elements of `other` into `self`, leaving `other` empty.\\n\\n# Panics\\n\\nPanics if the new capacity exceeds `isize::MAX` bytes.\\n\\n# Examples\\n\\n```rust\\nlet mut vec = vec![1, 2, 3];\\nlet mut vec2 = vec![4, 5, 6];\\nvec.append(&mut vec2);\\nassert_eq!(vec, [1, 2, 3, 4, 5, 6]);\\nassert_eq!(vec2, []);\\n```\"},\"insertTextFormat\":2,\"detail\":\"fn(&mut self, &mut Vec<T, A>)\",\"kind\":2,\"sortText\":\"ffffffef\",\"labelDetails\":{\"description\":\"fn(&mut self, &mut Vec<T, A>)\"},\"filterText\":\"append\",\"additionalTextEdits\":[],\"deprecated\":false,\"label\":\"append(…)\",\"preselect\":true,\"textEdit\":{\"range\":{\"start\":{\"line\":10,\"character\":23},\"end\":{\"line\":10,\"character\":26}},\"newText\":\"append(${1:other})$0\"},\"command\":{\"title\":\"triggerParameterHints\",\"command\":\"editor.action.triggerParameterHints\"}}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							347,
							354,
							10
						],
						"trigger": "append(…)"
					},
					"AgAAAGwBAAAAAAAAbAEAAAAAAAADAAAAYXBwbAEAAAAAAAB5AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwEAAAAAAABvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					357,
					1,
					"left_delete",
					null,
					"AQAAAHMBAAAAAAAAcwEAAAAAAAAFAAAAb3RoZXI",
					"AQAAAAAAAAABAAAAcwEAAAAAAAB4AQAAAAAAAAAAAAAAAPC/"
				],
				[
					358,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAHIBAAAAAAAAcgEAAAAAAAABAAAAKHIBAAAAAAAAcgEAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAcwEAAAAAAABzAQAAAAAAAAAAAAAAAPC/"
				],
				[
					359,
					6,
					"left_delete",
					null,
					"BgAAAHEBAAAAAAAAcQEAAAAAAAABAAAAZHABAAAAAAAAcAEAAAAAAAABAAAAbm8BAAAAAAAAbwEAAAAAAAABAAAAZW4BAAAAAAAAbgEAAAAAAAABAAAAcG0BAAAAAAAAbQEAAAAAAAABAAAAcGwBAAAAAAAAbAEAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAcgEAAAAAAAByAQAAAAAAAAAAAAAAAPC/"
				],
				[
					360,
					1,
					"insert",
					{
						"characters": "push"
					},
					"BAAAAGwBAAAAAAAAbQEAAAAAAAAAAAAAbQEAAAAAAABuAQAAAAAAAAAAAABuAQAAAAAAAG8BAAAAAAAAAAAAAG8BAAAAAAAAcAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAEAAAAAAABsAQAAAAAAAAAAAAAAAPC/"
				],
				[
					361,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHABAAAAAAAAcgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAEAAAAAAABwAQAAAAAAAAAAAAAAAPC/"
				],
				[
					362,
					1,
					"insert",
					{
						"characters": "token"
					},
					"BQAAAHEBAAAAAAAAcgEAAAAAAAAAAAAAcgEAAAAAAABzAQAAAAAAAAAAAABzAQAAAAAAAHQBAAAAAAAAAAAAAHQBAAAAAAAAdQEAAAAAAAAAAAAAdQEAAAAAAAB2AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQEAAAAAAABxAQAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHcBAAAAAAAAeAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwEAAAAAAAB3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					367,
					1,
					"insert",
					{
						"characters": "\nprintl"
					},
					"CAAAAOwBAAAAAAAA7QEAAAAAAAAAAAAA7QEAAAAAAADxAQAAAAAAAAAAAADxAQAAAAAAAPIBAAAAAAAAAAAAAPIBAAAAAAAA8wEAAAAAAAAAAAAA8wEAAAAAAAD0AQAAAAAAAAAAAAD0AQAAAAAAAPUBAAAAAAAAAAAAAPUBAAAAAAAA9gEAAAAAAAAAAAAA9gEAAAAAAAD3AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AEAAAAAAADsAQAAAAAAAAAAAAAAsHNA"
				],
				[
					368,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"documentation\":{\"kind\":\"markdown\",\"value\":\"Prints to the standard output, with a newline.\\n\\nOn all platforms, the newline is the LINE FEED character (`\\\\n`/`U+000A`) alone\\n(no additional CARRIAGE RETURN (`\\\\r`/`U+000D`)).\\n\\nThis macro uses the same syntax as [`format!`], but writes to the standard output instead.\\nSee [`std::fmt`] for more information.\\n\\nUse `println!` only for the primary output of your program. Use\\n[`eprintln!`] instead to print error and progress messages.\\n\\n[`std::fmt`]: crate::fmt\\n[`eprintln!`]: crate::eprintln\\n\\n# Panics\\n\\nPanics if writing to [`io::stdout`] fails.\\n\\n[`io::stdout`]: crate::io::stdout\\n\\n# Examples\\n\\n```rust\\nprintln!(); // prints just a newline\\nprintln!(\\\"hello there!\\\");\\nprintln!(\\\"format {} arguments\\\", \\\"some\\\");\\n```\"},\"textEdit\":{\"range\":{\"start\":{\"line\":17,\"character\":4},\"end\":{\"line\":17,\"character\":10}},\"newText\":\"println!($0)\"},\"deprecated\":false,\"label\":\"println!(…)\",\"detail\":\"macro_rules! println\",\"additionalTextEdits\":[],\"kind\":3,\"sortText\":\"ffffffef\",\"labelDetails\":{\"description\":\"macro_rules! println\"},\"filterText\":\"println!\",\"insertTextFormat\":2}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							358,
							367,
							8
						],
						"trigger": "println!(…)"
					},
					"AgAAAPEBAAAAAAAA8QEAAAAAAAAGAAAAcHJpbnRs8QEAAAAAAAD7AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wEAAAAAAAD3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					369,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAPoBAAAAAAAA/AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gEAAAAAAAD6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					370,
					1,
					"insert",
					{
						"characters": "{}"
					},
					"AgAAAPsBAAAAAAAA/AEAAAAAAAAAAAAA/AEAAAAAAAD9AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wEAAAAAAAD7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					373,
					1,
					"insert",
					{
						"characters": "token"
					},
					"BQAAAPwBAAAAAAAA/QEAAAAAAAAAAAAA/QEAAAAAAAD+AQAAAAAAAAAAAAD+AQAAAAAAAP8BAAAAAAAAAAAAAP8BAAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAABAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AEAAAAAAAD8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					374,
					5,
					"left_delete",
					null,
					"BQAAAAACAAAAAAAAAAIAAAAAAAABAAAAbv8BAAAAAAAA/wEAAAAAAAABAAAAZf4BAAAAAAAA/gEAAAAAAAABAAAAa/0BAAAAAAAA/QEAAAAAAAABAAAAb/wBAAAAAAAA/AEAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAAQIAAAAAAAABAgAAAAAAAAAAAAAAAPC/"
				],
				[
					375,
					1,
					"insert",
					{
						"characters": "result"
					},
					"BgAAAPwBAAAAAAAA/QEAAAAAAAAAAAAA/QEAAAAAAAD+AQAAAAAAAAAAAAD+AQAAAAAAAP8BAAAAAAAAAAAAAP8BAAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAABAgAAAAAAAAAAAAABAgAAAAAAAAICAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AEAAAAAAAD8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					1,
					"insert",
					{
						"characters": ":?"
					},
					"AgAAAAICAAAAAAAAAwIAAAAAAAAAAAAAAwIAAAAAAAAEAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgIAAAAAAAACAgAAAAAAAAAAAAAAAPC/"
				],
				[
					381,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAcCAAAAAAAACAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwIAAAAAAAAHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					391,
					2,
					"swap_line_up",
					null,
					"BAAAAMUBAAAAAAAAxQEAAAAAAAAYAAAAICAgICAgICAgICAgaW5kZXggKz0gMTsKtwEAAAAAAADPAQAAAAAAAAAAAAC3AQAAAAAAALcBAAAAAAAAGAAAACAgICAgICAgICAgIGluZGV4ICs9IDE7CqABAAAAAAAAuAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wEAAAAAAADbAQAAAAAAAAAAAAAAwGhA"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAKwBAAAAAAAArQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAEAAAAAAACsAQAAAAAAAAAAAAAAAPC/"
				],
				[
					398,
					1,
					"insert",
					{
						"characters": " else"
					},
					"BQAAAN0BAAAAAAAA3gEAAAAAAAAAAAAA3gEAAAAAAADfAQAAAAAAAAAAAADfAQAAAAAAAOABAAAAAAAAAAAAAOABAAAAAAAA4QEAAAAAAAAAAAAA4QEAAAAAAADiAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QEAAAAAAADdAQAAAAAAAAAAAAAAwGhA"
				],
				[
					399,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOIBAAAAAAAA4wEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gEAAAAAAADiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					400,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOMBAAAAAAAA5QEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wEAAAAAAADjAQAAAAAAAAAAAAAAAPC/"
				],
				[
					401,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAOQBAAAAAAAA5QEAAAAAAAAAAAAA5QEAAAAAAADxAQAAAAAAAAAAAADxAQAAAAAAAPIBAAAAAAAAAAAAAPIBAAAAAAAA/gEAAAAAAAAAAAAA5QEAAAAAAADlAQAAAAAAAAwAAAAgICAgICAgICAgICDlAQAAAAAAAPIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AEAAAAAAADkAQAAAAAAAAAAAAAAAPC/"
				],
				[
					402,
					1,
					"paste",
					null,
					"AQAAAPIBAAAAAAAA/QEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gEAAAAAAADyAQAAAAAAAAAAAAAAAPC/"
				],
				[
					404,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									12,
									12
								],
								[
									12,
									13
								],
								"    ",
								null
							],
							[
								[
									15,
									12
								],
								[
									15,
									13
								],
								"    ",
								null
							]
						]
					},
					"AgAAAPEBAAAAAAAA9QEAAAAAAAABAAAACawBAAAAAAAAsAEAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAA/QEAAAAAAAD9AQAAAAAAAAAAAAAAAPC/"
				],
				[
					410,
					1,
					"left_delete",
					null,
					"AQAAADECAAAAAAAAMQIAAAAAAAAGAAAAcmVzdWx0",
					"AQAAAAAAAAABAAAAMQIAAAAAAAA3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					412,
					2,
					"left_delete",
					null,
					"AgAAADICAAAAAAAAMgIAAAAAAAABAAAAPzECAAAAAAAAMQIAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAMwIAAAAAAAAzAgAAAAAAAAAAAAAAAPC/"
				],
				[
					415,
					1,
					"insert",
					{
						"characters": "\nresult.j"
					},
					"CgAAACECAAAAAAAAIgIAAAAAAAAAAAAAIgIAAAAAAAAmAgAAAAAAAAAAAAAmAgAAAAAAACcCAAAAAAAAAAAAACcCAAAAAAAAKAIAAAAAAAAAAAAAKAIAAAAAAAApAgAAAAAAAAAAAAApAgAAAAAAACoCAAAAAAAAAAAAACoCAAAAAAAAKwIAAAAAAAAAAAAAKwIAAAAAAAAsAgAAAAAAAAAAAAAsAgAAAAAAAC0CAAAAAAAAAAAAAC0CAAAAAAAALgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQIAAAAAAAAhAgAAAAAAAAAAAAAA4GBA"
				],
				[
					416,
					1,
					"insert",
					{
						"characters": "oin"
					},
					"AwAAAC4CAAAAAAAALwIAAAAAAAAAAAAALwIAAAAAAAAwAgAAAAAAAAAAAAAwAgAAAAAAADECAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgIAAAAAAAAuAgAAAAAAAAAAAAAAAPC/"
				],
				[
					417,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADECAAAAAAAAMwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQIAAAAAAAAxAgAAAAAAAAAAAAAAAPC/"
				],
				[
					418,
					1,
					"insert_snippet",
					{
						"contents": "'"
					},
					"AQAAADICAAAAAAAAMwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgIAAAAAAAAyAgAAAAAAAAAAAAAAAPC/"
				],
				[
					419,
					1,
					"left_delete",
					null,
					"AQAAADICAAAAAAAAMgIAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAMwIAAAAAAAAzAgAAAAAAAAAAAAAAAPC/"
				],
				[
					420,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAADICAAAAAAAANAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgIAAAAAAAAyAgAAAAAAAAAAAAAAAPC/"
				],
				[
					422,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADUCAAAAAAAANgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQIAAAAAAAA1AgAAAAAAAAAAAAAAAPC/"
				],
				[
					428,
					1,
					"cut",
					null,
					"AQAAACYCAAAAAAAAJgIAAAAAAAAQAAAAcmVzdWx0LmpvaW4oIiIpOw",
					"AQAAAAAAAAABAAAANgIAAAAAAAAmAgAAAAAAAAAAAAAAAPC/"
				],
				[
					431,
					1,
					"insert",
					{
						"characters": ","
					},
					"AgAAADgCAAAAAAAAOQIAAAAAAAAAAAAAIgIAAAAAAAAiAgAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAAOAIAAAAAAAA4AgAAAAAAAAAAAAAAAPC/"
				],
				[
					432,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADUCAAAAAAAANgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQIAAAAAAAA1AgAAAAAAAAAAAAAAAPC/"
				],
				[
					433,
					1,
					"paste",
					null,
					"AQAAADYCAAAAAAAARgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgIAAAAAAAA2AgAAAAAAAAAAAAAAAPC/"
				],
				[
					434,
					1,
					"left_delete",
					null,
					"AQAAAEUCAAAAAAAARQIAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAARgIAAAAAAABGAgAAAAAAAAAAAAAAAPC/"
				],
				[
					443,
					1,
					"insert",
					{
						"characters": ".to"
					},
					"AwAAAHYBAAAAAAAAdwEAAAAAAAAAAAAAdwEAAAAAAAB4AQAAAAAAAAAAAAB4AQAAAAAAAHkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgEAAAAAAAB2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					450,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"rust-analyzer\",\"item\":{\"documentation\":{\"kind\":\"markdown\",\"value\":\"Converts the given value to a `String`.\\n\\n# Examples\\n\\nBasic usage:\\n\\n```rust\\nlet i = 5;\\nlet five = String::from(\\\"5\\\");\\n\\nassert_eq!(five, i.to_string());\\n```\"},\"insertTextFormat\":2,\"detail\":\"fn(&self) -> String\",\"kind\":2,\"sortText\":\"ffffffec\",\"labelDetails\":{\"description\":\"fn(&self) -> String\"},\"filterText\":\"to_string\",\"additionalTextEdits\":[],\"deprecated\":false,\"label\":\"to_string() (as ToString)\",\"preselect\":true,\"textEdit\":{\"range\":{\"start\":{\"line\":10,\"character\":34},\"end\":{\"line\":10,\"character\":36}},\"newText\":\"to_string()$0\"}}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							419,
							443,
							3
						],
						"trigger": "to_string() (as ToString)"
					},
					"AgAAAHcBAAAAAAAAdwEAAAAAAAACAAAAdG93AQAAAAAAAIIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQEAAAAAAAB5AQAAAAAAAAAAAAAAAPC/"
				],
				[
					457,
					1,
					"duplicate_line",
					null,
					"AQAAACMAAAAAAAAAOgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgAAAAAAAAAiAAAAAAAAAAAAAAAAwGhA"
				],
				[
					459,
					3,
					"left_delete",
					null,
					"AwAAADYAAAAAAAAANgAAAAAAAAABAAAAYzUAAAAAAAAANQAAAAAAAAABAAAAYjQAAAAAAAAANAAAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAANwAAAAAAAAA3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					460,
					1,
					"paste",
					null,
					"AQAAADQAAAAAAAAAPAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAAAAAAAAAA0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					462,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAABAAAAAAAAAAEwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgAAAAAAAAAiAAAAAAAAAAAAAAAAIGxA"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ena",
				"LSP: Enable Language Server in Project"
			],
			[
				"lsp en",
				"LSP: Enable Language Server in Project"
			],
			[
				"lsp for",
				"LSP: Format File"
			],
			[
				"theme",
				"UI: Select Theme"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"prefere",
				"Preferences: LSP Settings"
			],
			[
				"lsp pre",
				"Preferences: LSP Settings"
			],
			[
				"format l",
				"LSP: Format File"
			],
			[
				"disa",
				"LSP: Disable Language Server in Project"
			],
			[
				"lsp enabl",
				"LSP: Enable Language Server in Project"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"lsp disa",
				"LSP: Disable Language Server in Project"
			],
			[
				"lsp ena",
				"LSP: Enable Language Server in Project"
			],
			[
				"lsp disab",
				"LSP: Disable Language Server in Project"
			],
			[
				"lsp form",
				"LSP: Format File"
			],
			[
				"disable",
				"LSP: Disable Language Server in Project"
			],
			[
				"enable",
				"LSP: Enable Language Server in Project"
			],
			[
				"lsp enab",
				"LSP: Enable Language Server in Project"
			],
			[
				"disable ls",
				"LSP: Disable Language Server in Project"
			],
			[
				"enabl",
				"LSP: Enable Language Server in Project"
			],
			[
				"angular",
				"Preferences: LSP-angular Settings"
			],
			[
				"lsp",
				"Preferences: LSP Settings"
			],
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/trox667/sw/aoc/2016/rs"
	],
	"file_history":
	[
		"/home/trox667/sw/aoc/2016/rs/src/day05.rs",
		"/home/trox667/sw/aoc/2016/rs/src/main.rs",
		"/home/trox667/sw/aoc/2016/inputs/input04",
		"/home/trox667/sw/aoc/2016/ts/day02.ts",
		"/home/trox667/sw/aoc/2016/ts/day04.ts",
		"/home/trox667/sw/aoc/2016/ts/out",
		"/home/trox667/sw/aoc/2016/ts/day01.ts",
		"/home/trox667/sw/aoc/2016/ts/day03.ts",
		"/home/trox667/sw/aoc/2016/inputs/input03",
		"/home/trox667/sw/aoc/2016/inputs/input02",
		"/home/trox667/sw/rust/RaycastingRenderer/target/debug/build/raylib-sys-aa750c2c3a0d0eba/out/raylib/examples/models/resources/gltf/AnimatedTriangle.gltf",
		"/home/trox667/sw/aoc/2016/inputs/input01",
		"/home/trox667/sw/webgpu_demo/vectorAdd.ts",
		"/home/trox667/sw/raytracer/weekend_with_deno/src/shader.wgsl",
		"/home/trox667/sw/raytracer/weekend_with_deno/src/mod.ts",
		"/home/trox667/sw/raytracer/weekend_with_deno/src/BufferUtils.ts",
		"/home/trox667/sw/raytracer/deno/mod.ts",
		"/home/trox667/sw/raytracer/deno/compute.ts",
		"/home/trox667/sw/raytracer/deno/matrix_shader.wgsl",
		"/home/trox667/sw/webgpu_demo/triangle.ts",
		"/home/trox667/sw/rust/bevy/examples/scene/scene.rs",
		"/home/trox667/sw/rust/bevy/examples/transforms/global_vs_local_translation.rs",
		"/home/trox667/sw/rust/bevy/examples/transforms/transform.rs",
		"/home/trox667/sw/rust/bevy/examples/transforms/3d_rotation.rs",
		"/home/trox667/sw/rust/bevy/examples/3d/lighting.rs",
		"/home/trox667/sw/mynotes/client/src/app/view-notes/view-notes.component.html",
		"/home/trox667/sw/mynotes/client/src/app/view-notes/view-notes.component.ts",
		"/home/trox667/sw/mynotes/client/client.sublime-project",
		"/home/trox667/sw/mynotes/client/src/app/list-note/list-note.component.ts",
		"/home/trox667/sw/mynotes/client/package.json",
		"/home/trox667/sw/mynotes/client/src/app/api.service.ts"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"digest",
			"const",
			"day05"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/trox667/sw/aoc/2016/rs/Cargo.toml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 229,
						"regions":
						{
						},
						"selection":
						[
							[
								220,
								225
							]
						],
						"settings":
						{
							"lsp_uri": "file:///home/trox667/sw/aoc/2016/rs/Cargo.toml",
							"syntax": "Packages/TOML/TOML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/trox667/sw/aoc/2016/rs/src/day05.rs",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 629,
						"regions":
						{
						},
						"selection":
						[
							[
								37,
								37
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ":.'(",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "rust-analyzer"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 2,
							"lsp_uri": "file:///home/trox667/sw/aoc/2016/rs/src/day05.rs",
							"show_definitions": false,
							"syntax": "Packages/Rust/Rust.sublime-syntax",
							"tab_size": 4
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.diagnostics":
	{
		"height": 108.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.language servers":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "aoc-2016-rs.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ay0",
				"src/day05.rs"
			],
			[
				"cargo",
				"Cargo.toml"
			],
			[
				"main",
				"src/main.rs"
			],
			[
				"day02",
				"day02.ts"
			],
			[
				"day01",
				"day01.ts"
			],
			[
				"day03",
				"day03.ts"
			],
			[
				"day",
				"day01.ts"
			],
			[
				"view-note",
				"src/app/view-notes/view-notes.component.ts"
			],
			[
				"package",
				"package.json"
			],
			[
				"list-note",
				"src/app/list-note/list-note.component.ts"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/sw/aoc/2016/ts/aoc-2016-ts.sublime-project"
			],
			[
				"w-cl",
				"~/sw/work/liteweb/www3/client/lw-client.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 281.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
